{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable/fable-core.2.0.0-beta-001/Int32.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Long.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Date.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Util.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Option.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Seq.js","webpack:///./.fable/fable-core.2.0.0-beta-001/String.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Set.js","webpack:///./.fable/fable-core.2.0.0-beta-001/List.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Map.js","webpack:///./.fable/fable-core.2.0.0-beta-001/Types.js","webpack:///.fable/Fable.React.4.0.0-alpha-001/Fable.Helpers.React.fs","webpack:///src/Fabulosa/ClassNames.fs","webpack:///src/Fabulosa/Components/Button.fs","webpack:///docs/Fabulosa.Docs/pages/Renderer.fs","webpack:///docs/Fabulosa.Docs/pages/HomeDemo.fs","webpack:///docs/Fabulosa.Docs/pages/ButtonDemo.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","parseRadix","invalidRadix2","invalidRadix8","invalidRadix10","isValid","radix","res","exec","test","Error","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","this","GetHashCode","combineHashCodes","Equals","x","equals","CompareTo","compare","toString","Long_toString","toJSON","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","op_UnaryNegation","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","str","RangeError","indexOf","substring","radixToPower","size","min","parseInt","op_Addition","op_Multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","op_Division","rem1","op_Subtraction","rem","remDiv","digits","isOdd","other","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","op_LogicalNot","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","op_RightShiftUnsigned","op_LeftShift","op_RightShift","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","padWithZeros","offsetToString","offset","isMinus","minutes","abs","toHalfUTCString","date","half","toISOString","toStringWithCustomFormat","format","utc","replace","match","rep","y","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","h","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","toStringWithOffset","Date","getTime","dateWithOffset","toISOStringWithOffset","toStringWithKind","kind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","getMilliseconds","getTimezoneOffset","Date_toString","date1","Date_compare","xtime","ytime","THIS_REF","downcast","extend","target","_len","arguments","sources","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","source","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","getOwnPropertyDescriptor","err","return","Lazy","factory","_classCallCheck","isValueCreated","_createClass","createdValue","Util_toString","quoteStrings","String","_typeof","JSON","stringify","getPrototypeOf","constructor","isPlainObject","isArray","k","v","isIterable","from","map","join","ObjectRef","idMap","has","set","count","stringHash","len","charCodeAt","numberHash","hashes","reduce","h1","h2","structuralHash","ar","ArrayBuffer","isView","equalArrays","eq","equalArraysWith","Util_equals","compareArrays","comp","compareArraysWith","Util_compare","WeakMap","CaseRules","None","LowerFirst","changeCase","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Option_Some","Some","Option_classCallCheck","Option_createClass","Option_value","acceptNull","declare","tag","field","Union","Enumerator","iter","Seq_classCallCheck","Seq_createClass","cur","current","getEnumerator","toIterator","en","MoveNext","Current","delay","f","_defineProperty","xs","unfold","fst","acc","asString","fromCharCode","fsFormatRegExp","toHex","printf","input","cont","createPrinter","_len2","args","_key2","strCopy","arg","formatOnce","fsFormat","str2","_","prefix","flags","pad","precision","Number","toFixed","toPrecision","toExponential","toUpperCase","plusPrefix","ch","padLeft","delimiter","xs2","char","isRight","Set_SetTree$00601","concat","SetTreeModule$$$count","s$$1","SetTreeModule$$$countAux","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","l$$1","r$$1","SetTreeModule$$$height","SetTreeModule$$$tolerance","SetTreeModule$$$mk","l$$2","r$$2","matchValue","hl","hr","SetTreeModule$$$rebalance","t1","k$$1","t2","t1h","t2h","t2r","t2l","t2k","t2lr","t2ll","t2lk","t1r","t1l","t1k","t1rr","t1rl","t1rk","SetTreeModule$$$add","comparer","k$$2","t$$1","k2$$1","c$$1","Compare","r$$3","l$$3","k2","SetTreeModule$$$remove","comparer$$3","k$$4","t$$4","k2$$6","r$$5","l$$5","k2$$7","c$$5","matchValue$$2","patternInput$$3","SetTreeModule$$$spliceOutSuccessor","t$$3","r$$4","l$$4","k2$$5","patternInput$$2","SetTreeModule$$$mem","comparer$$4","k$$5","t$$5","k2$$9","r$$6","l$$6","k2$$8","c$$6","SetTreeModule$002ESetIterator$00601","arg1","arg2","stack","started","Record","SetTreeModule$$$collapseLHS","tail","L","head","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","matchValue$$6","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","$this$$79","_extend","_mutatorMap","$this$$80","_ref2","Set_defineProperty","i$$1","matchValue$$7","SetTreeModule$$$moveNext","SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator","$this$$81","_ref3","SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable","_defineEnumerableProperties","SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$toSeq","s$$16","en$$1","SetTreeModule$$$compare","comparer$$18","s1","s2","matchValue$$9","comparer$$17","l1","l2","SetTreeModule$$$compareStacks","$target$$39","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","matchValue$$8","c$$7","c$$8","c$$9","c$$10","SetTreeModule$$$ofSeq","comparer$$20","c$$11","ie","comparer$$19","acc$$11","$var$$40","SetTreeModule$$$mkFromEnumerator","Dispose","FSharpSet","comparer$$22","tree","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","__$$5","createMutable","comparer$$32","comparer$$31","tree$0027","tree$$1","add","x$$33","add_","x$$34","clear","delete","x$$35","x$$36","values","createMutablePrivate","List_foldIndexed","f$$1","seed","xs$$8","$arg$$8","$arg$$9","$arg$$10","$arg$$11","_arg1$$5","xs$$7","foldIndexedAux","List_fold","f$$2","seed$$1","xs$$9","_arg1$$6","acc$$1","x$$6","List_reverse","xs$$10","acc$$2","x$$7","List_append","xs$$24","ys$$11","acc$$13","x$$17","List_choose","f$$43","xs$$68","acc$$23","x$$43","combineHash","x$$22","y$$4","e$$1","that","that$$1","Map_MapTree$00602","MapTreeModule$$$size","MapTreeModule$$$sizeAux","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","MapTreeModule$$$rebalance","v$$1","t2v","t2lv","t1v","t1rv","MapTreeModule$$$add","v$$2","m$$3","v2","h$$1","MapTreeModule$$$find","comparer$$1","k$$3","m$$4","v2$$1","k2$$2","v2$$2","k2$$3","c$$3","MapTreeModule$$$remove","comparer$$9","k$$11","m$$7","v2$$7","r$$8","l$$8","matchValue$$1","patternInput$$1","MapTreeModule$$$spliceOutSuccessor","m$$6","v2$$5","v2$$6","r$$7","l$$7","patternInput","MapTreeModule$$$mem","comparer$$10","k$$12","m$$8","k2$$10","r$$9","l$$9","k2$$11","MapTreeModule$$$ofSeq","comparer$$16","comparer$$14","acc$$10","$var$$60","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","MapTreeModule$$$collapseLHS","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","matchValue$$4","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","$this$$119","$this$$120","Map_defineProperty","i$$3","matchValue$$5","MapTreeModule$$$moveNext","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator","$this$$121","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable","Map_defineEnumerableProperties","MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","FSharpMap","FSharpMap$$get_Tree","Map_createMutable","source$$3","comparer$$23","x$$18","entries","k$$41","x$$19","kv$$1","k$$42","v$$28","kv$$2","Map_createMutablePrivate","sameType","cons","superClass","subClass","writable","configurable","inherits","SystemObject","compareList","self","List","recordToJson","record","getFieldNames","recordEquals","thisNames","recordCompare","kv","toText","x$$16","y$$3","res$$3","activePatternResult2387","m2","res$$4","finished","e1","e2","kvp1","kvp2","_this","id","identityHash","tmp","_this2","_this3","contents","Exception","msg","message","getFSharpExceptionFieldNames","filter","FSharpException","_this4","fieldNames","_this5","arg3","Types_Dictionary","__mutableMap","Types_HashSet","__mutableSet","initProps","react","init","props","_arg1$$1","_arg1$$4","componentClasses","htmlProps","className","nonEmpty","$arg$$2","concatStrings","htmlClassName","htmlAttr","$arg$$1","htmlClasses","this$$$1","model","state","view","newState","update","setState","ReactiveComponents$002EState$00601","_arg1$$2","_arg1$$3","combineProps","Button$$$kind","Kind","Button$$$color","Color","Button$$$size","Size","Button$$$state","State","Button$$$format","Format","HTMLProps","props$$3","c$$2","elem","react_dom","document","getElementById","console","Anchor$$$$0192","Button$002EProps","Button_Button$002EKind","Anchor$$$defaults","Fable_Helpers_React_Props$002EHTMLAttr","Button$$$$0192","Button$$$defaults","Button_Button$002ESize","Button_Button$002EColor","tryMount","HomeDemo_button","ButtonDemo_button","primary","ButtonDemo_link","small","medium","large","success","ButtonDemo_error"],"mappings":"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","file":"app.417deece3a17f8ed2558.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([135,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const parseRadix = /^\\s*([\\+\\-])?(0[xob])?([0-9a-fA-F]+)\\s*$/;\nconst invalidRadix2 = /[^01]/;\nconst invalidRadix8 = /[^0-7]/;\nconst invalidRadix10 = /[^0-9]/;\nexport function isValid(s, radix) {\n    const res = parseRadix.exec(s);\n    if (res != null) {\n        if (radix == null) {\n            switch (res[2]) {\n                case \"0b\":\n                    radix = 2;\n                    break;\n                case \"0o\":\n                    radix = 8;\n                    break;\n                case \"0x\":\n                    radix = 16;\n                    break;\n                default:\n                    radix = 10;\n                    break;\n            }\n        }\n        switch (radix) {\n            case 2:\n                return invalidRadix2.test(res[3]) ? null : [res, 2];\n            case 8:\n                return invalidRadix8.test(res[3]) ? null : [res, 8];\n            case 10:\n                return invalidRadix10.test(res[3]) ? null : [res, 10];\n            case 16:\n                return [res, 16];\n            default:\n                throw new Error(\"Invalid Base.\");\n        }\n    }\n    return null;\n}\n// TODO does this perfectly match the .NET behavior ?\nexport function tryParse(s, radix, initial) {\n    const a = isValid(s, radix);\n    if (a !== null) {\n        const [[, prefix, , digits], radix_] = a;\n        const v = parseInt((prefix || \"\") + digits, radix_);\n        if (!Number.isNaN(v)) {\n            return [true, v];\n        }\n    }\n    return [false, initial];\n}\nexport function parse(s, radix) {\n    const a = tryParse(s, radix, 0);\n    if (a[0]) {\n        return a[1];\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/f572e3a17d313730cf11eb838f6d2a5e31626f8a/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { isValid } from \"./Int32\";\nimport { combineHashCodes } from \"./Util\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport default function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    return combineHashCodes([this.unsigned ? 1 : 0, this.high, this.low]);\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nexport const neg = op_UnaryNegation;\nexport const not = op_LogicalNot;\nexport const add = op_Addition;\nexport const sub = op_Subtraction;\nexport const mul = op_Multiply;\nexport const div = op_Division;\nexport const mod = op_Modulus;\nexport const shl = op_LeftShift;\nexport const shr = op_RightShift;\nexport const and = op_BitwiseAnd;\nexport const or = op_BitwiseOr;\nexport const xor = op_ExclusiveOr;\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return op_UnaryNegation(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (isValid(str, radix) === null) {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return op_UnaryNegation(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = op_Addition(op_Multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = op_Multiply(result, radixToPower);\n            result = op_Addition(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n// For compatibility with Int32 module\nexport function parse(str, radix) {\n    return fromString(str, false, radix);\n}\nexport function tryParse(str, radix, defaultValue) {\n    try {\n        return [true, fromString(str, false, radix)];\n    }\n    catch (_a) {\n        return [false, defaultValue];\n    }\n}\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = op_Division($this, radixLong), rem1 = op_Subtraction(op_Multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(op_UnaryNegation($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = op_Division(rem, radixToPower), intval = toInt(op_Subtraction(rem, op_Multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(op_UnaryNegation($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value is negative.\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value differs from the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value is less than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Compares this Long's value with the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(op_Subtraction($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Absolute value of the given number.\n */\nexport function abs($this) {\n    if (!$this.unsigned && isNegative($this))\n        return op_UnaryNegation($this);\n    else\n        return $this;\n}\n/**\n * Negates this Long's value.\n * @returns {!Long} Negated Long\n */\nexport function op_UnaryNegation($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return op_Addition(op_LogicalNot($this), ONE);\n}\n;\n/**\n * Returns the sum of this and the specified Long.\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function op_Addition($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function op_Subtraction($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return op_Addition($this, op_UnaryNegation(subtrahend));\n}\n;\n/**\n * Returns the product of this and the specified Long.\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function op_Multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return op_Multiply(op_UnaryNegation($this), op_UnaryNegation(multiplier));\n        else\n            return op_UnaryNegation(op_Multiply(op_UnaryNegation($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return op_UnaryNegation(op_Multiply($this, op_UnaryNegation(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function op_Division($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = op_RightShift($this, 1);\n                approx = op_LeftShift(op_Division(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = op_Subtraction($this, op_Multiply(divisor, approx));\n                    res = op_Addition(approx, op_Division(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return op_Division(op_UnaryNegation($this), op_UnaryNegation(divisor));\n            return op_UnaryNegation(op_Division(op_UnaryNegation($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return op_UnaryNegation(op_Division($this, op_UnaryNegation(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, op_RightShiftUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = op_Multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = op_Multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = op_Addition(res, approxRes);\n        rem = op_Subtraction(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long modulo the specified.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function op_Modulus($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return op_Subtraction($this, op_Multiply(op_Division($this, divisor), divisor));\n}\n;\n/**\n * Returns the bitwise NOT of this Long.\n * @returns {!Long}\n */\nexport function op_LogicalNot($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseAnd($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_ExclusiveOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_LeftShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShiftUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Converts this Long to signed.\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function offsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function toHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction toISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? offsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction toISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + offsetToString(offset);\n}\nfunction toStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = match;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n        }\n        if (rep !== match && rep < 10 && match.length > 1) {\n            rep = \"0\" + rep;\n        }\n        return rep;\n    });\n}\nexport function toStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + offsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return toHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return toHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return toISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return toStringWithCustomFormat(d, format, true);\n    }\n}\nexport function toStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? toHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? toHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return toISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return toStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? toStringWithOffset(date, format)\n        : toStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - offset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - offset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), offset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        /* tslint:disable */\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        /* tslint:enable */\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds = parseInt(timeParts[0], 10) * 3600 +\n                    parseInt(timeParts[1] || \"0\", 10) * 60 +\n                    parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function offset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTime(d.getTime() + ts, d.kind);\n}\nexport function addDays(d, v) {\n    return DateTime(d.getTime() + v * 86400000, d.kind);\n}\nexport function addHours(d, v) {\n    return DateTime(d.getTime() + v * 3600000, d.kind);\n}\nexport function addMinutes(d, v) {\n    return DateTime(d.getTime() + v * 60000, d.kind);\n}\nexport function addSeconds(d, v) {\n    return DateTime(d.getTime() + v * 1000, d.kind);\n}\nexport function addMilliseconds(d, v) {\n    return DateTime(d.getTime() + v, d.kind);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTime(d.getTime() - that, d.kind)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function compare(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + offset(x);\n        ytime = y.getTime() + offset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n","// tslint:disable:ban-types\nimport { compare as compareDates, toString as dateToString } from \"./Date\";\nexport const THIS_REF = Symbol(\"this\");\n// In case the object has been casted to an interface, test also agains THIS_REF\nexport function instanceofExtended(obj, cons) {\n    return obj instanceof cons || obj[THIS_REF] instanceof cons;\n}\nexport function downcast(obj) {\n    return obj[THIS_REF] != null ? obj[THIS_REF] : obj;\n}\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function toString(obj, quoteStrings = false) {\n    if (obj == null) {\n        return String(obj);\n    }\n    switch (typeof obj) {\n        case \"number\":\n        case \"boolean\":\n        case \"symbol\":\n        case \"undefined\":\n            return String(obj);\n        case \"string\":\n            return quoteStrings ? JSON.stringify(obj) : obj;\n        case \"function\":\n            return obj.name;\n        case \"object\":\n            // if (typeof obj.ToString === \"function\") {\n            //   return obj.ToString();\n            // }\n            // TODO: Print some elements of iterables?\n            if (isPlainObject(obj) || Array.isArray(obj)) {\n                try {\n                    return JSON.stringify(obj, (k, v) => {\n                        if (v != null) {\n                            if (v instanceof Date) {\n                                return dateToString(v);\n                            }\n                            else if (isIterable(v) && !Array.isArray(v) && typeof v !== \"string\") {\n                                return Array.from(v);\n                            }\n                        }\n                        return String(v);\n                    });\n                }\n                catch (err) {\n                    // Fallback for objects with circular references\n                    return \"{\" + Object.keys(obj).map((k) => k + \": \" + String(obj[k])).join(\", \") + \"}\";\n                }\n            }\n            else {\n                return obj instanceof Date ? dateToString(obj) : String(obj);\n            }\n    }\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(toString(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x[Symbol.iterator] === \"function\";\n}\nexport function isPlainObject(x) {\n    return x != null && Object.getPrototypeOf(x).constructor === Object;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n};\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + toString(kvPair));\n    }\n    const o = {};\n    for (let kvPair of fields) {\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        if (typeof kvPair.toJSON === \"function\") { // Deflate unions\n            kvPair = kvPair.toJSON();\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    return isArray(col) ? col.length : col.size;\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // return (...args: any[]) => {\n    //   // In some cases there may be more arguments applied than necessary\n    //   // (e.g. index when mapping an array), discard them\n    //   args = args.slice(0, arity);\n    //   let res = f;\n    //   while (args.length > 0) {\n    //       const curArgs = args.splice(0, res.length);\n    //       res = res.apply(null, curArgs);\n    //   }\n    //   return res;\n    // };\n    switch (arity) {\n        case 2:\n            return (a1, a2) => f(a1)(a2);\n        case 3:\n            return (a1, a2, a3) => f(a1)(a2)(a3);\n        case 4:\n            return (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n        case 5:\n            return (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n        case 6:\n            return (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n        case 7:\n            return (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n        case 8:\n            return (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash, toString } from \"./Util\";\n// Options are erased in runtime by Fable, but we have\n// the `Some` type below to wrap values that would evaluate\n// to null in runtime. These two rules must be followed:\n// 1- None is always null in runtime, a non-strict null check\n//    (`x == null`) is enough to check the case of an option.\n// 2- To get the value of an option the `getValue` helper\n//    below must **always** be used.\n// export type Option<T> = T | Some<T>;\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return toString(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        return other == null\n            ? false\n            : equals(this.value, other instanceof Some ? other.value : other);\n    }\n    CompareTo(other) {\n        return other == null\n            ? 1\n            : compare(this.value, other instanceof Some ? other.value : other);\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","import { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs) {\n    let count = 1;\n    const sum = reduce((acc, x) => {\n        count++;\n        return acc + x;\n    }, xs);\n    return sum / count;\n}\nexport function averageBy(f, xs) {\n    let count = 1;\n    const sum = reduce((acc, x) => {\n        count++;\n        return (count === 2 ? f(acc) : acc) + f(x);\n    }, xs);\n    return sum / count;\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function forAll(f, xs) {\n    return fold((acc, x) => acc && f(x), true, xs);\n}\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => acc && f(x, y), true, xs, ys);\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeStep(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, x + 1] : null, first));\n}\nexport function range(first, last) {\n    return rangeStep(first, 1, last);\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs) {\n    return fold((acc, x) => acc + x, 0, xs);\n}\nexport function sumBy(f, xs) {\n    return fold((acc, x) => acc + f(x), 0, xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n","import { toString as dateToString } from \"./Date\";\nimport { escape } from \"./RegExp\";\nimport { isArray, toString } from \"./Util\";\nfunction asString(x) {\n    return typeof x === \"number\" ? String.fromCharCode(x) : x;\n}\nexport function toCharArray(str) {\n    const len = str.length;\n    const ar = new Uint16Array(len);\n    for (let i = 0; i < len; i++) {\n        ar[i] = str.charCodeAt(i);\n    }\n    return ar;\n}\nexport function toCharIterable(source) {\n    return typeof source === \"string\" ? toCharArray(source) : source;\n}\nexport function fromCharArray(ar, startIndex, count) {\n    const ar2 = startIndex == null\n        ? ar\n        // If count arg is undefined, startIndex becomes the count and startIndex is 0\n        : (count == null ? ar.slice(0, startIndex) : ar.slice(startIndex, startIndex + count));\n    return String.fromCharCode(...ar2);\n}\nexport function fromChar(char, count) {\n    return String.fromCharCode(char).repeat(count);\n}\nconst fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:(.+?))?\\}/g;\n// From https://stackoverflow.com/a/13653180/3922220\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(String.fromCharCode(c));\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(value) {\n    return value < 0\n        ? \"ff\" + (16777215 - (Math.abs(value) - 1)).toString(16)\n        : value.toString(16);\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, pad, precision, format) => {\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                rep = Number(rep).toFixed(precision || 6);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = Number(rep).toPrecision(precision);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = Number(rep).toExponential(precision);\n                break;\n            case \"O\":\n                rep = toString(rep);\n                break;\n            case \"A\":\n                rep = toString(rep, true);\n                break;\n            case \"x\":\n                rep = toHex(Number(rep));\n                break;\n            case \"X\":\n                rep = toHex(Number(rep)).toUpperCase();\n                break;\n        }\n        const plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n        pad = parseInt(pad, 10);\n        if (!isNaN(pad)) {\n            const ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? 48 : 32; // \"0\" : \" \";\n            rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n        }\n        const once = prefix + (plusPrefix ? \"+\" + rep : rep);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (match, idx, pad, pattern) => {\n        let rep = args[idx];\n        let padSymbol = 32; // \" \";\n        if (typeof rep === \"number\") {\n            switch ((pattern || \"\").substring(0, 1)) {\n                case \"f\":\n                case \"F\":\n                    rep = pattern.length > 1 ? rep.toFixed(pattern.substring(1)) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = pattern.length > 1 ? rep.toPrecision(pattern.substring(1)) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = pattern.length > 1 ? rep.toExponential(pattern.substring(1)) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (pattern.length > 1 ? (rep * 100).toFixed(pattern.substring(1)) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default:\n                    const m = /^(0+)(\\.0+)?$/.exec(pattern);\n                    if (m != null) {\n                        let decs = 0;\n                        if (m[2] != null) {\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        }\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = 48; // \"0\";\n                    }\n                    else if (pattern) {\n                        rep = pattern;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern);\n        }\n        pad = parseInt((pad || \"\").substring(1), 10);\n        if (!isNaN(pad)) {\n            rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, xs) {\n    let xs2 = typeof xs === \"string\" ? [xs] : xs;\n    const len = arguments.length;\n    if (len > 2) {\n        xs2 = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            xs2[key - 1] = arguments[key];\n        }\n    }\n    else if (!Array.isArray(xs2)) {\n        xs2 = Array.from(xs2);\n    }\n    return xs2.map((x) => toString(x)).join(asString(delimiter));\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmed = trim(str, 123, 125); // \"{\",\"}\"\n    if (guidRegex.test(trimmed)) {\n        return doNotThrow ? [true, trimmed] : trimmed;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n/* tslint:disable */\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = '';\n    for (let a = 0; a++ < 36; b += a * 51 & 52\n        ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n        : '-')\n        ;\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (var i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, (function (oct) {\n        switch (i) {\n            // .NET saves first three byte groups with differten endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    return _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + '-' +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + '-' +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + '-' +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + '-' +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n}\n/* tslint:enable */\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, char, isRight) {\n    const ch = char == null ? \" \" : String.fromCharCode(char);\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, char) {\n    return padLeft(str, len, char, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(asString(search)), \"g\"), asString(replace));\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input.charCodeAt(index);\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(asString(splitters), count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    let pattern = \" \";\n    const splittersLen = splitters.length;\n    if (splittersLen > 0) {\n        const temp = new Array(splittersLen);\n        // splitters may be an Uint16TypedArray of chars, we cannot use .map\n        for (let i = 0; i < splittersLen; i++) {\n            temp[i] = escape(asString(splitters[i]));\n        }\n        pattern = temp.join(\"|\");\n    }\n    const reg = new RegExp(pattern, \"g\");\n    const splits = [];\n    let i = 0;\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(String.fromCharCode(...chars)) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(String.fromCharCode(...chars)) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(String.fromCharCode(...chars)) + \"]+$\"), \"\");\n}\nexport function filter(pred, str) {\n    return fromCharArray(toCharArray(str).filter(pred));\n}\nexport function map(f, str) {\n    return fromCharArray(toCharArray(str).map(f));\n}\nexport function mapIndexed(f, str) {\n    return fromCharArray(toCharArray(str).map((c, i) => f(i, c)));\n}\nexport function collect(f, str) {\n    const ar1 = toCharArray(str);\n    const ar2 = new Array(ar1.length);\n    for (let i = 0; i < ar1.length; i++) {\n        ar2[i] = f(ar1[i]);\n    }\n    return ar2.join(\"\");\n}\n","import { L, Record, declare, Union } from \"./Types\";\nimport { value as value$$2, some, Choice } from \"./Option\";\nimport { iterate as iterate$$1, empty as empty$$1, fold as fold$$2, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq\";\nimport { fold as fold$$1 } from \"./Array\";\nimport { extend, THIS_REF, downcast, structuralHash, toString } from \"./Util\";\nimport { join } from \"./String\";\nexport const SetTree$00601 = declare(function SetTree$00601(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTreeModule$$$countAux(s, acc) {\n  SetTreeModule$$$countAux: while (true) {\n    if (s.tag === 2) {\n      return acc + 1 | 0;\n    } else if (s.tag === 0) {\n      return acc | 0;\n    } else {\n      const r = s.fields[2];\n      const l = s.fields[1];\n      s = l;\n      acc = SetTreeModule$$$countAux(r, acc + 1);\n      continue SetTreeModule$$$countAux;\n    }\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  if (t.tag === 2) {\n    return 1;\n  } else if (t.tag === 1) {\n    const h$$1 = t.fields[3] | 0;\n    return h$$1 | 0;\n  } else {\n    return 0;\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  const matchValue = [l$$2, r$$2];\n  var $target$$3;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$3 = 0;\n    } else {\n      $target$$3 = 1;\n    }\n  } else {\n    $target$$3 = 1;\n  }\n\n  switch ($target$$3) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n        break;\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n        break;\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      const t2r = t2.fields[2];\n      const t2l = t2.fields[1];\n      const t2k = t2.fields[0];\n\n      if (SetTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 1) {\n          const t2lr = t2l.fields[2];\n          const t2ll = t2l.fields[1];\n          const t2lk = t2l.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2ll), t2lk, SetTreeModule$$$mk(t2lr, t2k, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2l), t2k, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      const t1r = t1.fields[2];\n      const t1l = t1.fields[1];\n      const t1k = t1.fields[0];\n\n      if (SetTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 1) {\n          const t1rr = t1r.fields[2];\n          const t1rl = t1r.fields[1];\n          const t1rk = t1r.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1l, t1k, t1rl), t1rk, SetTreeModule$$$mk(t1rr, k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1l, t1k, SetTreeModule$$$mk(t1r, k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  if (t$$1.tag === 2) {\n    const k2$$1 = t$$1.fields[0];\n    const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n    if (c$$1 < 0) {\n      return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n    } else if (c$$1 === 0) {\n      return t$$1;\n    } else {\n      return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n    }\n  } else if (t$$1.tag === 0) {\n    return SetTreeModule$$$SetOne(k$$2);\n  } else {\n    const r$$3 = t$$1.fields[2];\n    const l$$3 = t$$1.fields[1];\n    const k2 = t$$1.fields[0];\n    const c = comparer.Compare(k$$2, k2) | 0;\n\n    if (c < 0) {\n      return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, l$$3), k2, r$$3);\n    } else if (c === 0) {\n      return t$$1;\n    } else {\n      return SetTreeModule$$$rebalance(l$$3, k2, SetTreeModule$$$add(comparer, k$$2, r$$3));\n    }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  const matchValue$$1 = [t1$$1, t2$$1];\n  var $target$$4, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (matchValue$$1[0].tag === 2) {\n    if (matchValue$$1[1].tag === 0) {\n      $target$$4 = 1;\n      t1$$2 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 2) {\n      $target$$4 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    } else {\n      $target$$4 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    }\n  } else if (matchValue$$1[0].tag === 1) {\n    if (matchValue$$1[1].tag === 2) {\n      $target$$4 = 3;\n      k2$$2 = matchValue$$1[1].fields[0];\n      t1$$3 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 1) {\n      $target$$4 = 4;\n      h1 = matchValue$$1[0].fields[3];\n      h2 = matchValue$$1[1].fields[3];\n      k1$$1 = matchValue$$1[0].fields[0];\n      k2$$3 = matchValue$$1[1].fields[0];\n      t11 = matchValue$$1[0].fields[1];\n      t12 = matchValue$$1[0].fields[2];\n      t21 = matchValue$$1[1].fields[1];\n      t22 = matchValue$$1[1].fields[2];\n    } else {\n      $target$$4 = 1;\n      t1$$2 = matchValue$$1[0];\n    }\n  } else {\n    $target$$4 = 0;\n    t2$$2 = matchValue$$1[1];\n  }\n\n  switch ($target$$4) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n        break;\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n        break;\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n        break;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n        break;\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n\n        break;\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  if (t$$2.tag === 2) {\n    const k1$$3 = t$$2.fields[0];\n    const c$$3 = comparer$$2.Compare(k1$$3, pivot) | 0;\n\n    if (c$$3 < 0) {\n      return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n    } else if (c$$3 === 0) {\n      return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n    } else {\n      return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n    }\n  } else if (t$$2.tag === 0) {\n    return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n  } else {\n    const t12$$1 = t$$2.fields[2];\n    const t11$$1 = t$$2.fields[1];\n    const k1$$2 = t$$2.fields[0];\n    const c$$2 = comparer$$2.Compare(pivot, k1$$2) | 0;\n\n    if (c$$2 < 0) {\n      const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t11$$1);\n      return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], k1$$2, t12$$1)];\n    } else if (c$$2 === 0) {\n      return [t11$$1, true, t12$$1];\n    } else {\n      const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t12$$1);\n      return [SetTreeModule$$$balance(comparer$$2, t11$$1, k1$$2, patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n    }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  if (t$$3.tag === 2) {\n    const k2$$4 = t$$3.fields[0];\n    return [k2$$4, new SetTree$00601(0, \"SetEmpty\")];\n  } else if (t$$3.tag === 1) {\n    const r$$4 = t$$3.fields[2];\n    const l$$4 = t$$3.fields[1];\n    const k2$$5 = t$$3.fields[0];\n\n    if (l$$4.tag === 0) {\n      return [k2$$5, r$$4];\n    } else {\n      const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(l$$4);\n      return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], k2$$5, r$$4)];\n    }\n  } else {\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  if (t$$4.tag === 2) {\n    const k2$$6 = t$$4.fields[0];\n    const c$$4 = comparer$$3.Compare(k$$4, k2$$6) | 0;\n\n    if (c$$4 === 0) {\n      return new SetTree$00601(0, \"SetEmpty\");\n    } else {\n      return t$$4;\n    }\n  } else if (t$$4.tag === 1) {\n    const r$$5 = t$$4.fields[2];\n    const l$$5 = t$$4.fields[1];\n    const k2$$7 = t$$4.fields[0];\n    const c$$5 = comparer$$3.Compare(k$$4, k2$$7) | 0;\n\n    if (c$$5 < 0) {\n      return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, l$$5), k2$$7, r$$5);\n    } else if (c$$5 === 0) {\n      const matchValue$$2 = [l$$5, r$$5];\n\n      if (matchValue$$2[0].tag === 0) {\n        return r$$5;\n      } else if (matchValue$$2[1].tag === 0) {\n        return l$$5;\n      } else {\n        const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(r$$5);\n        return SetTreeModule$$$mk(l$$5, patternInput$$3[0], patternInput$$3[1]);\n      }\n    } else {\n      return SetTreeModule$$$rebalance(l$$5, k2$$7, SetTreeModule$$$remove(comparer$$3, k$$4, r$$5));\n    }\n  } else {\n    return t$$4;\n  }\n}\nexport function SetTreeModule$$$mem(comparer$$4, k$$5, t$$5) {\n  SetTreeModule$$$mem: while (true) {\n    if (t$$5.tag === 2) {\n      const k2$$9 = t$$5.fields[0];\n      return comparer$$4.Compare(k$$5, k2$$9) === 0;\n    } else if (t$$5.tag === 0) {\n      return false;\n    } else {\n      const r$$6 = t$$5.fields[2];\n      const l$$6 = t$$5.fields[1];\n      const k2$$8 = t$$5.fields[0];\n      const c$$6 = comparer$$4.Compare(k$$5, k2$$8) | 0;\n\n      if (c$$6 < 0) {\n        comparer$$4 = comparer$$4;\n        k$$5 = k$$5;\n        t$$5 = l$$6;\n        continue SetTreeModule$$$mem;\n      } else if (c$$6 === 0) {\n        return true;\n      } else {\n        comparer$$4 = comparer$$4;\n        k$$5 = k$$5;\n        t$$5 = r$$6;\n        continue SetTreeModule$$$mem;\n      }\n    }\n  }\n}\nexport function SetTreeModule$$$iter(f, t$$6) {\n  if (t$$6.tag === 2) {\n    const k2$$11 = t$$6.fields[0];\n    f(k2$$11);\n  } else if (t$$6.tag === 0) {} else {\n    const r$$7 = t$$6.fields[2];\n    const l$$7 = t$$6.fields[1];\n    const k2$$10 = t$$6.fields[0];\n    SetTreeModule$$$iter(f, l$$7);\n    f(k2$$10);\n    SetTreeModule$$$iter(f, r$$7);\n  }\n}\nexport function SetTreeModule$$$foldBack($arg$$7, $arg$$8, $arg$$9) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $arg$$7,\n          m$$1 = $arg$$8,\n          x$$1 = $arg$$9;\n\n    if (m$$1.tag === 2) {\n      const k$$7 = m$$1.fields[0];\n      return f$$1(k$$7, x$$1);\n    } else if (m$$1.tag === 0) {\n      return x$$1;\n    } else {\n      const r$$8 = m$$1.fields[2];\n      const l$$8 = m$$1.fields[1];\n      const k$$6 = m$$1.fields[0];\n      $arg$$7 = f$$1;\n      $arg$$8 = l$$8;\n      $arg$$9 = f$$1(k$$6, SetTreeModule$$$foldBack(f$$1, r$$8, x$$1));\n      continue SetTreeModule$$$foldBack;\n    }\n  }\n}\nexport function SetTreeModule$$$fold($arg$$10, $arg$$11, $arg$$12) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $arg$$10,\n          x$$2 = $arg$$11,\n          m$$2 = $arg$$12;\n\n    if (m$$2.tag === 2) {\n      const k$$9 = m$$2.fields[0];\n      return f$$2(x$$2, k$$9);\n    } else if (m$$2.tag === 0) {\n      return x$$2;\n    } else {\n      const r$$9 = m$$2.fields[2];\n      const l$$9 = m$$2.fields[1];\n      const k$$8 = m$$2.fields[0];\n      const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, l$$9);\n      const x$$4 = f$$2(x$$3, k$$8);\n      $arg$$10 = f$$2;\n      $arg$$11 = x$$4;\n      $arg$$12 = r$$9;\n      continue SetTreeModule$$$fold;\n    }\n  }\n}\nexport function SetTreeModule$$$forall($arg$$13, $arg$$14) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $arg$$13,\n          m$$3 = $arg$$14;\n\n    if (m$$3.tag === 2) {\n      const k2$$13 = m$$3.fields[0];\n      return f$$3(k2$$13);\n    } else if (m$$3.tag === 0) {\n      return true;\n    } else {\n      const r$$10 = m$$3.fields[2];\n      const l$$10 = m$$3.fields[1];\n      const k2$$12 = m$$3.fields[0];\n\n      if (f$$3(k2$$12) ? SetTreeModule$$$forall(f$$3, l$$10) : false) {\n        $arg$$13 = f$$3;\n        $arg$$14 = r$$10;\n        continue SetTreeModule$$$forall;\n      } else {\n        return false;\n      }\n    }\n  }\n}\nexport function SetTreeModule$$$exists($arg$$15, $arg$$16) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $arg$$15,\n          m$$4 = $arg$$16;\n\n    if (m$$4.tag === 2) {\n      const k2$$15 = m$$4.fields[0];\n      return f$$4(k2$$15);\n    } else if (m$$4.tag === 0) {\n      return false;\n    } else {\n      const r$$11 = m$$4.fields[2];\n      const l$$11 = m$$4.fields[1];\n      const k2$$14 = m$$4.fields[0];\n\n      if (f$$4(k2$$14) ? true : SetTreeModule$$$exists(f$$4, l$$11)) {\n        return true;\n      } else {\n        $arg$$15 = f$$4;\n        $arg$$16 = r$$11;\n        continue SetTreeModule$$$exists;\n      }\n    }\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($arg$$17, $arg$$18, $arg$$19, $arg$$20) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$17,\n          f$$5 = $arg$$18,\n          s$$2 = $arg$$19,\n          acc$$1 = $arg$$20;\n\n    if (s$$2.tag === 2) {\n      const k$$11 = s$$2.fields[0];\n\n      if (f$$5(k$$11)) {\n        return SetTreeModule$$$add(comparer$$7, k$$11, acc$$1);\n      } else {\n        return acc$$1;\n      }\n    } else if (s$$2.tag === 0) {\n      return acc$$1;\n    } else {\n      const r$$12 = s$$2.fields[2];\n      const l$$12 = s$$2.fields[1];\n      const k$$10 = s$$2.fields[0];\n      const acc$$2 = f$$5(k$$10) ? SetTreeModule$$$add(comparer$$7, k$$10, acc$$1) : acc$$1;\n      $arg$$17 = comparer$$7;\n      $arg$$18 = f$$5;\n      $arg$$19 = l$$12;\n      $arg$$20 = SetTreeModule$$$filterAux(comparer$$7, f$$5, r$$12, acc$$2);\n      continue SetTreeModule$$$filterAux;\n    }\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux(comparer$$9, m$$6, acc$$3) {\n  SetTreeModule$$$diffAux: while (true) {\n    if (m$$6.tag === 2) {\n      const k$$13 = m$$6.fields[0];\n      return SetTreeModule$$$remove(comparer$$9, k$$13, acc$$3);\n    } else if (m$$6.tag === 0) {\n      return acc$$3;\n    } else {\n      const r$$13 = m$$6.fields[2];\n      const l$$13 = m$$6.fields[1];\n      const k$$12 = m$$6.fields[0];\n      const $var$$24 = comparer$$9;\n      m$$6 = l$$13;\n      acc$$3 = SetTreeModule$$$diffAux(comparer$$9, r$$13, SetTreeModule$$$remove(comparer$$9, k$$12, acc$$3));\n      comparer$$9 = $var$$24;\n      continue SetTreeModule$$$diffAux;\n    }\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  const matchValue$$3 = [t1$$4, t2$$4];\n  var $target$$25, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (matchValue$$3[0].tag === 0) {\n    $target$$25 = 1;\n    t$$7 = matchValue$$3[1];\n  } else if (matchValue$$3[0].tag === 2) {\n    if (matchValue$$3[1].tag === 0) {\n      $target$$25 = 2;\n      t$$8 = matchValue$$3[0];\n    } else if (matchValue$$3[1].tag === 2) {\n      $target$$25 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    } else {\n      $target$$25 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    }\n  } else if (matchValue$$3[1].tag === 0) {\n    $target$$25 = 2;\n    t$$8 = matchValue$$3[0];\n  } else if (matchValue$$3[1].tag === 2) {\n    $target$$25 = 4;\n    k2$$17 = matchValue$$3[1].fields[0];\n    t1$$5 = matchValue$$3[0];\n  } else {\n    $target$$25 = 0;\n    h1$$1 = matchValue$$3[0].fields[3];\n    h2$$1 = matchValue$$3[1].fields[3];\n    k1$$4 = matchValue$$3[0].fields[0];\n    k2$$16 = matchValue$$3[1].fields[0];\n    t11$$2 = matchValue$$3[0].fields[1];\n    t12$$2 = matchValue$$3[0].fields[2];\n    t21$$1 = matchValue$$3[1].fields[1];\n    t22$$1 = matchValue$$3[1].fields[2];\n  }\n\n  switch ($target$$25) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n\n        break;\n      }\n\n    case 1:\n      {\n        return t$$7;\n        break;\n      }\n\n    case 2:\n      {\n        return t$$8;\n        break;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n        break;\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n        break;\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7, acc$$4) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    if (m$$7.tag === 2) {\n      const k$$15 = m$$7.fields[0];\n\n      if (SetTreeModule$$$mem(comparer$$12, k$$15, b$$3)) {\n        return SetTreeModule$$$add(comparer$$12, k$$15, acc$$4);\n      } else {\n        return acc$$4;\n      }\n    } else if (m$$7.tag === 0) {\n      return acc$$4;\n    } else {\n      const r$$14 = m$$7.fields[2];\n      const l$$14 = m$$7.fields[1];\n      const k$$14 = m$$7.fields[0];\n      const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, r$$14, acc$$4);\n      const acc$$6 = SetTreeModule$$$mem(comparer$$12, k$$14, b$$3) ? SetTreeModule$$$add(comparer$$12, k$$14, acc$$5) : acc$$5;\n      comparer$$12 = comparer$$12;\n      b$$3 = b$$3;\n      m$$7 = l$$14;\n      acc$$4 = acc$$6;\n      continue SetTreeModule$$$intersectionAux;\n    }\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($arg$$31, $arg$$32, $arg$$33, $arg$$34, $arg$$35) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $arg$$31,\n          f$$8 = $arg$$32,\n          s$$4 = $arg$$33,\n          acc_0 = $arg$$34,\n          acc_1 = $arg$$35;\n    const acc$$7 = [acc_0, acc_1];\n\n    if (s$$4.tag === 2) {\n      const k$$18 = s$$4.fields[0];\n      return SetTreeModule$$$partition1(comparer$$15, f$$8, k$$18, acc$$7[0], acc$$7[1]);\n    } else if (s$$4.tag === 0) {\n      return acc$$7;\n    } else {\n      const r$$15 = s$$4.fields[2];\n      const l$$15 = s$$4.fields[1];\n      const k$$17 = s$$4.fields[0];\n      const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, r$$15, acc$$7[0], acc$$7[1]);\n      const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, k$$17, acc$$8[0], acc$$8[1]);\n      $arg$$31 = comparer$$15;\n      $arg$$32 = f$$8;\n      $arg$$33 = l$$15;\n      $arg$$34 = acc$$9[0];\n      $arg$$35 = acc$$9[1];\n      continue SetTreeModule$$$partitionAux;\n    }\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  if (s$$6.tag === 2) {\n    const k2$$19 = s$$6.fields[0];\n    return new Choice(0, \"Choice1Of2\", [k2$$19, new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n  } else if (s$$6.tag === 0) {\n    return new Choice(1, \"Choice2Of2\", null);\n  } else {\n    const r$$16 = s$$6.fields[2];\n    const l$$16 = s$$6.fields[1];\n    const k2$$18 = s$$6.fields[0];\n    return new Choice(0, \"Choice1Of2\", [k2$$18, l$$16, r$$16]);\n  }\n}\nexport function SetTreeModule$$$minimumElementAux(s$$7, n$$1) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    if (s$$7.tag === 2) {\n      const k$$20 = s$$7.fields[0];\n      return k$$20;\n    } else if (s$$7.tag === 0) {\n      return n$$1;\n    } else {\n      const l$$17 = s$$7.fields[1];\n      const k$$19 = s$$7.fields[0];\n      s$$7 = l$$17;\n      n$$1 = k$$19;\n      continue SetTreeModule$$$minimumElementAux;\n    }\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  if (s$$8.tag === 2) {\n    const k$$22 = s$$8.fields[0];\n    return some(k$$22);\n  } else if (s$$8.tag === 0) {\n    return null;\n  } else {\n    const l$$18 = s$$8.fields[1];\n    const k$$21 = s$$8.fields[0];\n    return some(SetTreeModule$$$minimumElementAux(l$$18, k$$21));\n  }\n}\nexport function SetTreeModule$$$maximumElementAux(s$$9, n$$2) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    if (s$$9.tag === 2) {\n      const k$$24 = s$$9.fields[0];\n      return k$$24;\n    } else if (s$$9.tag === 0) {\n      return n$$2;\n    } else {\n      const r$$17 = s$$9.fields[2];\n      const k$$23 = s$$9.fields[0];\n      s$$9 = r$$17;\n      n$$2 = k$$23;\n      continue SetTreeModule$$$maximumElementAux;\n    }\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  if (s$$10.tag === 2) {\n    const k$$26 = s$$10.fields[0];\n    return some(k$$26);\n  } else if (s$$10.tag === 0) {\n    return null;\n  } else {\n    const r$$18 = s$$10.fields[2];\n    const k$$25 = s$$10.fields[0];\n    return some(SetTreeModule$$$maximumElementAux(r$$18, k$$25));\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function SetTreeModule$002ESetIterator$00601(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$$$collapseLHS(stack) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        stack = L(stack.head.fields[1], L(SetTreeModule$$$SetOne(stack.head.fields[0]), L(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        stack = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return L();\n    }\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(L(s$$13, L())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function SetTreeModule$002EmkIEnumerator$00601(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this != null ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601(SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15));\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks(comparer$$17, l1, l2) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const matchValue$$8 = [l1, l2];\n    var $target$$39, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (matchValue$$8[0].tail != null) {\n      if (matchValue$$8[1].tail != null) {\n        if (matchValue$$8[1].head.tag === 2) {\n          if (matchValue$$8[0].head.tag === 2) {\n            $target$$39 = 4;\n            n1k = matchValue$$8[0].head.fields[0];\n            n2k = matchValue$$8[1].head.fields[0];\n            t1$$7 = matchValue$$8[0].tail;\n            t2$$7 = matchValue$$8[1].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            if (matchValue$$8[0].head.fields[1].tag === 0) {\n              $target$$39 = 6;\n              emp = matchValue$$8[0].head.fields[1];\n              n1k$$2 = matchValue$$8[0].head.fields[0];\n              n1r = matchValue$$8[0].head.fields[2];\n              n2k$$2 = matchValue$$8[1].head.fields[0];\n              t1$$9 = matchValue$$8[0].tail;\n              t2$$9 = matchValue$$8[1].tail;\n            } else {\n              $target$$39 = 9;\n              n1k$$5 = matchValue$$8[0].head.fields[0];\n              n1l = matchValue$$8[0].head.fields[1];\n              n1r$$2 = matchValue$$8[0].head.fields[2];\n              t1$$12 = matchValue$$8[0].tail;\n            }\n          } else {\n            $target$$39 = 10;\n            n2k$$4 = matchValue$$8[1].head.fields[0];\n            t2$$11 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[1].head.tag === 1) {\n          if (matchValue$$8[1].head.fields[1].tag === 0) {\n            if (matchValue$$8[0].head.tag === 2) {\n              $target$$39 = 5;\n              n1k$$1 = matchValue$$8[0].head.fields[0];\n              n2k$$1 = matchValue$$8[1].head.fields[0];\n              n2r = matchValue$$8[1].head.fields[2];\n              t1$$8 = matchValue$$8[0].tail;\n              t2$$8 = matchValue$$8[1].tail;\n            } else if (matchValue$$8[0].head.tag === 1) {\n              if (matchValue$$8[0].head.fields[1].tag === 0) {\n                $target$$39 = 7;\n                n1k$$3 = matchValue$$8[0].head.fields[0];\n                n1r$$1 = matchValue$$8[0].head.fields[2];\n                n2k$$3 = matchValue$$8[1].head.fields[0];\n                n2r$$1 = matchValue$$8[1].head.fields[2];\n                t1$$10 = matchValue$$8[0].tail;\n                t2$$10 = matchValue$$8[1].tail;\n              } else {\n                $target$$39 = 9;\n                n1k$$5 = matchValue$$8[0].head.fields[0];\n                n1l = matchValue$$8[0].head.fields[1];\n                n1r$$2 = matchValue$$8[0].head.fields[2];\n                t1$$12 = matchValue$$8[0].tail;\n              }\n            } else {\n              $target$$39 = 11;\n              n2k$$5 = matchValue$$8[1].head.fields[0];\n              n2l = matchValue$$8[1].head.fields[1];\n              n2r$$2 = matchValue$$8[1].head.fields[2];\n              t2$$12 = matchValue$$8[1].tail;\n            }\n          } else if (matchValue$$8[0].head.tag === 2) {\n            $target$$39 = 8;\n            n1k$$4 = matchValue$$8[0].head.fields[0];\n            t1$$11 = matchValue$$8[0].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            $target$$39 = 9;\n            n1k$$5 = matchValue$$8[0].head.fields[0];\n            n1l = matchValue$$8[0].head.fields[1];\n            n1r$$2 = matchValue$$8[0].head.fields[2];\n            t1$$12 = matchValue$$8[0].tail;\n          } else {\n            $target$$39 = 11;\n            n2k$$5 = matchValue$$8[1].head.fields[0];\n            n2l = matchValue$$8[1].head.fields[1];\n            n2r$$2 = matchValue$$8[1].head.fields[2];\n            t2$$12 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[0].head.tag === 2) {\n          $target$$39 = 8;\n          n1k$$4 = matchValue$$8[0].head.fields[0];\n          t1$$11 = matchValue$$8[0].tail;\n        } else if (matchValue$$8[0].head.tag === 1) {\n          $target$$39 = 9;\n          n1k$$5 = matchValue$$8[0].head.fields[0];\n          n1l = matchValue$$8[0].head.fields[1];\n          n1r$$2 = matchValue$$8[0].head.fields[2];\n          t1$$12 = matchValue$$8[0].tail;\n        } else {\n          $target$$39 = 3;\n          t1$$6 = matchValue$$8[0].tail;\n          t2$$6 = matchValue$$8[1].tail;\n        }\n      } else {\n        $target$$39 = 2;\n      }\n    } else if (matchValue$$8[1].tail != null) {\n      $target$$39 = 1;\n    } else {\n      $target$$39 = 0;\n    }\n\n    switch ($target$$39) {\n      case 0:\n        {\n          return 0;\n          break;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n          break;\n        }\n\n      case 2:\n        {\n          return 1;\n          break;\n        }\n\n      case 3:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = t1$$6;\n          l2 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n          break;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = t1$$7;\n            l2 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n\n          break;\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            l2 = L(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(n1r, t1$$9);\n            l2 = L(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n\n          break;\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            comparer$$17 = comparer$$17;\n            l1 = L(n1r$$1, t1$$10);\n            l2 = L(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = L(new SetTree$00601(0, \"SetEmpty\"), L(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          l2 = l2;\n          continue SetTreeModule$$$compareStacks;\n          break;\n        }\n\n      case 9:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = L(n1l, L(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          l2 = l2;\n          continue SetTreeModule$$$compareStacks;\n          break;\n        }\n\n      case 10:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = l1;\n          l2 = L(new SetTree$00601(0, \"SetEmpty\"), L(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n          break;\n        }\n\n      case 11:\n        {\n          comparer$$17 = comparer$$17;\n          l1 = l1;\n          l2 = L(n2l, L(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n          break;\n        }\n    }\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  const matchValue$$9 = [s1, s2];\n\n  if (matchValue$$9[0].tag === 0) {\n    if (matchValue$$9[1].tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (matchValue$$9[1].tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, L(s1, L()), L(s2, L())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop(m$$8, acc$$10) {\n  SetTreeModule$$$loop: while (true) {\n    if (m$$8.tag === 2) {\n      const k$$32 = m$$8.fields[0];\n      return L(k$$32, acc$$10);\n    } else if (m$$8.tag === 0) {\n      return acc$$10;\n    } else {\n      const r$$20 = m$$8.fields[2];\n      const l$$20 = m$$8.fields[1];\n      const k$$31 = m$$8.fields[0];\n      m$$8 = l$$20;\n      acc$$10 = L(k$$31, SetTreeModule$$$loop(r$$20, acc$$10));\n      continue SetTreeModule$$$loop;\n    }\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, L());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator(comparer$$19, acc$$11, e) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const $var$$40 = comparer$$19;\n      acc$$11 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      e = e;\n      comparer$$19 = $var$$40;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    ie.Dispose();\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, l$$21) {\n  return fold$$1(function (acc$$12, k$$33) {\n    return SetTreeModule$$$add(comparer$$21, k$$33, acc$$12);\n  }, new SetTree$00601(0, \"SetEmpty\"), l$$21);\n}\nexport const FSharpSet = declare(function FSharpSet(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this != null ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  if (FSharpSet$$get_Tree(s$$27).tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  if (FSharpSet$$get_Tree(s$$28).tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$596F5D77(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$34) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$34), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  if (FSharpSet$$get_Tree(a$$4).tag === 0) {\n    return a$$4;\n  } else if (FSharpSet$$get_Tree(b$$5).tag === 0) {\n    return a$$4;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  if (FSharpSet$$get_Tree(b$$6).tag === 0) {\n    return a$$5;\n  } else if (FSharpSet$$get_Tree(a$$5).tag === 0) {\n    return b$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  if (FSharpSet$$get_Tree(b$$7).tag === 0) {\n    return b$$7;\n  } else if (FSharpSet$$get_Tree(a$$6).tag === 0) {\n    return a$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  const this$ = this;\n  return \"set [\" + join(\"; \", map$$1(toString, this$)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$22, y$$4) {\n    return (x$$22 << 1) + y$$4 + 631;\n  };\n\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    res = combineHash(res, structuralHash(e$$1.Current));\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(downcast(that))) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(downcast(that$$1))) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$2(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$27, SetTreeModule$$$fold(function (acc$$14, k$$35) {\n    return SetTreeModule$$$add(comparer$$27, f$$23(k$$35), acc$$14);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$44)));\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$1, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$1));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    }\n\n  };\n}\n\nexport function createMutable(source, comparer$$32) {\n  return createMutablePrivate(comparer$$32, SetTreeModule$$$ofSeq(comparer$$32, source));\n}\nexport function distinct(xs, comparer$$33) {\n  return createMutable(xs, comparer$$33);\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  const li$$1 = [];\n  const hashSet = createMutable(empty$$1(), comparer$$34);\n  iterate$$1(function (x$$37) {\n    if (hashSet.add_(projection(x$$37))) {\n      li$$1.push(x$$37);\n    }\n  }, xs$$1);\n  return li$$1;\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$2(function folder(acc$$15, x$$38) {\n    return acc$$15.add(x$$38);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$39) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$39)) {\n      s1$$5.delete(x$$39);\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$40) {\n    s1$$6.delete(x$$40);\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EGeneric$002EIEnumerator$00601($this$$79) {\n  return extend(SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator($this$$79), SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable($this$$79), {\n    [THIS_REF]: $this$$79,\n\n    get Current() {\n      return SetTreeModule$$$current($this$$79.i);\n    }\n\n  });\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002ECollections$002EIEnumerator($this$$80) {\n  return {\n    [THIS_REF]: $this$$80,\n\n    MoveNext() {\n      return SetTreeModule$$$moveNext($this$$80.i);\n    },\n\n    Reset() {\n      $this$$80.i = SetTreeModule$$$mkIterator($this$$80.s);\n    }\n\n  };\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$System$002EIDisposable($this$$81) {\n  return {\n    [THIS_REF]: $this$$81,\n\n    Dispose() {}\n\n  };\n}","import { defaultArg, value as value$$1, some } from \"./Option\";\nimport { FSharpRef, L } from \"./Types\";\nimport { permute as permute$$1, ofList as ofList$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1, foldBack as foldBack$$1 } from \"./Array\";\nimport { ofList } from \"./Array\";\nimport { tryGetValue, addToSet, comparerFromEqualityComparer } from \"./Util\";\nimport { createMutable } from \"./Set\";\nimport { ofSeq as ofSeq$$1, foldBack as foldBack$$3, length as length$$1 } from \"./List\";\nimport { map as map$$1, iterate as iterate$$1, foldBack as foldBack$$2, unfold as unfold$$1 } from \"./Seq\";\nimport { createMutable as createMutable$$1 } from \"./Map\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    const x = _arg1.head;\n    return x;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    const x$$1 = _arg1$$1.head;\n    return some(x$$1);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    const xs = _arg1$$2.tail;\n    return xs;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last(_arg1$$3) {\n  last: while (true) {\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        _arg1$$3 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n  }\n}\nexport function tryLast(_arg1$$4) {\n  tryLast: while (true) {\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        _arg1$$4 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop(xs$$4, ys$$1) {\n      loop: while (true) {\n        const matchValue = [xs$$4, ys$$1];\n\n        if (matchValue[0].tail != null) {\n          if (matchValue[1].tail != null) {\n            const matchValue$$1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n\n            if (matchValue$$1 === 0) {\n              xs$$4 = matchValue[0].tail;\n              ys$$1 = matchValue[1].tail;\n              continue loop;\n            } else {\n              const res = matchValue$$1 | 0;\n              return res | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (matchValue[1].tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function equalsWith(comparer$$1, xs$$6, ys$$3) {\n  return compareWith(comparer$$1, xs$$6, ys$$3) === 0;\n}\nexport function foldIndexedAux($arg$$8, $arg$$9, $arg$$10, $arg$$11) {\n  foldIndexedAux: while (true) {\n    const f = $arg$$8,\n          i = $arg$$9,\n          acc = $arg$$10,\n          _arg1$$5 = $arg$$11;\n\n    if (_arg1$$5.tail != null) {\n      const xs$$7 = _arg1$$5.tail;\n      const x$$5 = _arg1$$5.head;\n      $arg$$8 = f;\n      $arg$$9 = i + 1;\n      $arg$$10 = f(i, acc, x$$5);\n      $arg$$11 = xs$$7;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n  }\n}\nexport function foldIndexed(f$$1, seed, xs$$8) {\n  return foldIndexedAux(f$$1, 0, seed, xs$$8);\n}\nexport function fold(f$$2, seed$$1, xs$$9) {\n  return foldIndexed(function (_arg1$$6, acc$$1, x$$6) {\n    return f$$2(acc$$1, x$$6);\n  }, seed$$1, xs$$9);\n}\nexport function reverse(xs$$10) {\n  return fold(function (acc$$2, x$$7) {\n    return L(x$$7, acc$$2);\n  }, L(), xs$$10);\n}\nexport function foldBack(f$$3, xs$$11, seed$$2) {\n  return fold(function (acc$$3, x$$8) {\n    return f$$3(x$$8, acc$$3);\n  }, seed$$2, reverse(xs$$11));\n}\nexport function foldIndexed2Aux($arg$$21, $arg$$22, $arg$$23, $arg$$24, $arg$$25) {\n  foldIndexed2Aux: while (true) {\n    const f$$4 = $arg$$21,\n          i$$1 = $arg$$22,\n          acc$$4 = $arg$$23,\n          bs = $arg$$24,\n          cs = $arg$$25;\n    const matchValue$$2 = [bs, cs];\n    var $target$$26, x$$9, xs$$12, y$$1, ys$$4;\n\n    if (matchValue$$2[0].tail != null) {\n      if (matchValue$$2[1].tail != null) {\n        $target$$26 = 1;\n        x$$9 = matchValue$$2[0].head;\n        xs$$12 = matchValue$$2[0].tail;\n        y$$1 = matchValue$$2[1].head;\n        ys$$4 = matchValue$$2[1].tail;\n      } else {\n        $target$$26 = 2;\n      }\n    } else if (matchValue$$2[1].tail == null) {\n      $target$$26 = 0;\n    } else {\n      $target$$26 = 2;\n    }\n\n    switch ($target$$26) {\n      case 0:\n        {\n          return acc$$4;\n          break;\n        }\n\n      case 1:\n        {\n          $arg$$21 = f$$4;\n          $arg$$22 = i$$1 + 1;\n          $arg$$23 = f$$4(i$$1, acc$$4, x$$9, y$$1);\n          $arg$$24 = xs$$12;\n          $arg$$25 = ys$$4;\n          continue foldIndexed2Aux;\n          break;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n          break;\n        }\n    }\n  }\n}\nexport function foldIndexed2(f$$5, seed$$3, xs$$13, ys$$5) {\n  return foldIndexed2Aux(f$$5, 0, seed$$3, xs$$13, ys$$5);\n}\nexport function fold2(f$$6, seed$$4, xs$$14, ys$$6) {\n  return foldIndexed2(function (_arg1$$7, acc$$5, x$$10, y$$2) {\n    return f$$6(acc$$5, x$$10, y$$2);\n  }, seed$$4, xs$$14, ys$$6);\n}\nexport function foldBack2(f$$7, xs$$15, ys$$7, seed$$5) {\n  return fold2(function (acc$$6, x$$11, y$$3) {\n    return f$$7(x$$11, y$$3, acc$$6);\n  }, seed$$5, reverse(xs$$15), reverse(ys$$7));\n}\nexport function unfold(f$$8, state) {\n  const unfoldInner = function unfoldInner(acc$$7, state$$1) {\n    unfoldInner: while (true) {\n      const matchValue$$3 = f$$8(state$$1);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$2 = matchValue$$3[1];\n        acc$$7 = L(x$$12, acc$$7);\n        state$$1 = state$$2;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$7);\n      }\n    }\n  };\n\n  return unfoldInner(L(), state);\n}\nexport function foldIndexed3Aux($arg$$41, $arg$$42, $arg$$43, $arg$$44, $arg$$45, $arg$$46) {\n  foldIndexed3Aux: while (true) {\n    const f$$9 = $arg$$41,\n          i$$2 = $arg$$42,\n          acc$$8 = $arg$$43,\n          bs$$1 = $arg$$44,\n          cs$$1 = $arg$$45,\n          ds = $arg$$46;\n    const matchValue$$4 = [bs$$1, cs$$1, ds];\n    var $target$$47, x$$13, xs$$16, y$$4, ys$$8, z, zs;\n\n    if (matchValue$$4[0].tail != null) {\n      if (matchValue$$4[1].tail != null) {\n        if (matchValue$$4[2].tail != null) {\n          $target$$47 = 1;\n          x$$13 = matchValue$$4[0].head;\n          xs$$16 = matchValue$$4[0].tail;\n          y$$4 = matchValue$$4[1].head;\n          ys$$8 = matchValue$$4[1].tail;\n          z = matchValue$$4[2].head;\n          zs = matchValue$$4[2].tail;\n        } else {\n          $target$$47 = 2;\n        }\n      } else {\n        $target$$47 = 2;\n      }\n    } else if (matchValue$$4[1].tail == null) {\n      if (matchValue$$4[2].tail == null) {\n        $target$$47 = 0;\n      } else {\n        $target$$47 = 2;\n      }\n    } else {\n      $target$$47 = 2;\n    }\n\n    switch ($target$$47) {\n      case 0:\n        {\n          return acc$$8;\n          break;\n        }\n\n      case 1:\n        {\n          $arg$$41 = f$$9;\n          $arg$$42 = i$$2 + 1;\n          $arg$$43 = f$$9(i$$2, acc$$8, x$$13, y$$4, z);\n          $arg$$44 = xs$$16;\n          $arg$$45 = ys$$8;\n          $arg$$46 = zs;\n          continue foldIndexed3Aux;\n          break;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n          break;\n        }\n    }\n  }\n}\nexport function foldIndexed3(f$$10, seed$$6, xs$$17, ys$$9, zs$$1) {\n  return foldIndexed3Aux(f$$10, 0, seed$$6, xs$$17, ys$$9, zs$$1);\n}\nexport function fold3(f$$11, seed$$7, xs$$18, ys$$10, zs$$2) {\n  return foldIndexed3(function (_arg1$$8, acc$$9, x$$14, y$$5, z$$1) {\n    return f$$11(acc$$9, x$$14, y$$5, z$$1);\n  }, seed$$7, xs$$18, ys$$10, zs$$2);\n}\nexport function scan(f$$12, seed$$8, xs$$19) {\n  return reverse(fold(function (acc$$10, x$$15) {\n    if (acc$$10.tail != null) {\n      const y$$6 = acc$$10.head;\n      return L(f$$12(y$$6, x$$15), acc$$10);\n    } else {\n      throw new Error(\"never\");\n    }\n  }, L(seed$$8, L()), xs$$19));\n}\nexport function scanBack(f$$13, xs$$21, seed$$9) {\n  return reverse(scan(function (acc$$11, x$$16) {\n    return f$$13(x$$16, acc$$11);\n  }, seed$$9, reverse(xs$$21)));\n}\nexport function length(xs$$23) {\n  return fold(function (acc$$12, _arg1$$9) {\n    return acc$$12 + 1;\n  }, 0, xs$$23);\n}\nexport function append(xs$$24, ys$$11) {\n  return fold(function (acc$$13, x$$17) {\n    return L(x$$17, acc$$13);\n  }, ys$$11, reverse(xs$$24));\n}\nexport function collect(f$$14, xs$$25) {\n  return fold(function (acc$$14, x$$18) {\n    return append(f$$14(x$$18), acc$$14);\n  }, L(), reverse(xs$$25));\n}\nexport function map(f$$15, xs$$26) {\n  return reverse(fold(function (acc$$15, x$$19) {\n    return L(f$$15(x$$19), acc$$15);\n  }, L(), xs$$26));\n}\nexport function mapIndexed(f$$16, xs$$28) {\n  return reverse(foldIndexed(function (i$$3, acc$$16, x$$20) {\n    return L(f$$16(i$$3, x$$20), acc$$16);\n  }, L(), xs$$28));\n}\nexport function indexed(xs$$30) {\n  return mapIndexed(function (i$$4, x$$21) {\n    return [i$$4, x$$21];\n  }, xs$$30);\n}\nexport function map2(f$$17, xs$$31, ys$$12) {\n  return reverse(fold2(function (acc$$17, x$$22, y$$7) {\n    return L(f$$17(x$$22, y$$7), acc$$17);\n  }, L(), xs$$31, ys$$12));\n}\nexport function mapIndexed2(f$$18, xs$$33, ys$$13) {\n  return reverse(foldIndexed2(function (i$$5, acc$$18, x$$23, y$$8) {\n    return L(f$$18(i$$5, x$$23, y$$8), acc$$18);\n  }, L(), xs$$33, ys$$13));\n}\nexport function map3(f$$19, xs$$35, ys$$14, zs$$3) {\n  return reverse(fold3(function (acc$$19, x$$24, y$$9, z$$2) {\n    return L(f$$19(x$$24, y$$9, z$$2), acc$$19);\n  }, L(), xs$$35, ys$$14, zs$$3));\n}\nexport function mapIndexed3(f$$20, xs$$37, ys$$15, zs$$4) {\n  return reverse(foldIndexed3(function (i$$6, acc$$20, x$$25, y$$10, z$$3) {\n    return L(f$$20(i$$6, x$$25, y$$10, z$$3), acc$$20);\n  }, L(), xs$$37, ys$$15, zs$$4));\n}\nexport function mapFold(f$$21, s, xs$$39) {\n  const foldFn = function foldFn(tupledArg, x$$26) {\n    const patternInput = f$$21(tupledArg[1], x$$26);\n    return [L(patternInput[0], tupledArg[0]), patternInput[1]];\n  };\n\n  const patternInput$$1 = fold(foldFn, [L(), s], xs$$39);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$22, xs$$40, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$22(v, s$$3);\n  }, s$$2, reverse(xs$$40));\n}\nexport function iterate(f$$23, xs$$41) {\n  fold(function (unitVar0, x$$27) {\n    f$$23(x$$27);\n  }, null, xs$$41);\n}\nexport function iterate2(f$$24, xs$$42, ys$$16) {\n  fold2(function (unitVar0$$1, x$$28, y$$11) {\n    f$$24(x$$28, y$$11);\n  }, null, xs$$42, ys$$16);\n}\nexport function iterateIndexed(f$$25, xs$$43) {\n  foldIndexed(function (i$$7, unitVar1, x$$29) {\n    f$$25(i$$7, x$$29);\n  }, null, xs$$43);\n}\nexport function iterateIndexed2(f$$26, xs$$44, ys$$17) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$30, y$$12) {\n    f$$26(i$$8, x$$30, y$$12);\n  }, null, xs$$44, ys$$17);\n}\nexport function ofArray(xs$$45) {\n  return foldBack$$1(function (x$$31, acc$$21) {\n    return L(x$$31, acc$$21);\n  }, xs$$45, L());\n}\nexport function empty() {\n  return L();\n}\nexport function isEmpty(_arg1$$10) {\n  if (_arg1$$10.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($arg$$100, $arg$$101, $arg$$102) {\n  tryPickIndexedAux: while (true) {\n    const f$$27 = $arg$$100,\n          i$$9 = $arg$$101,\n          _arg1$$11 = $arg$$102;\n\n    if (_arg1$$11.tail != null) {\n      const xs$$46 = _arg1$$11.tail;\n      const x$$32 = _arg1$$11.head;\n      const result = f$$27(i$$9, x$$32);\n\n      if (result == null) {\n        $arg$$100 = f$$27;\n        $arg$$101 = i$$9 + 1;\n        $arg$$102 = xs$$46;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function tryPickIndexed(f$$28, xs$$47) {\n  return tryPickIndexedAux(f$$28, 0, xs$$47);\n}\nexport function tryPick(f$$29, xs$$48) {\n  return tryPickIndexed(function (_arg1$$12, x$$33) {\n    return f$$29(x$$33);\n  }, xs$$48);\n}\nexport function pick(f$$30, xs$$49) {\n  const matchValue$$5 = tryPick(f$$30, xs$$49);\n\n  if (matchValue$$5 != null) {\n    const x$$34 = value$$1(matchValue$$5);\n    return x$$34;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$31, xs$$50) {\n  return tryPickIndexed(function (i$$10, x$$35) {\n    return f$$31(i$$10, x$$35) ? some(x$$35) : null;\n  }, xs$$50);\n}\nexport function tryFind(f$$32, xs$$51) {\n  return tryPickIndexed(function (_arg1$$13, x$$36) {\n    return f$$32(x$$36) ? some(x$$36) : null;\n  }, xs$$51);\n}\nexport function findIndexed(f$$33, xs$$52) {\n  const matchValue$$6 = tryFindIndexed(f$$33, xs$$52);\n\n  if (matchValue$$6 != null) {\n    const x$$37 = value$$1(matchValue$$6);\n    return x$$37;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$34, xs$$53) {\n  return findIndexed(function (_arg1$$14, x$$38) {\n    return f$$34(x$$38);\n  }, xs$$53);\n}\nexport function findBack(f$$35, xs$$54) {\n  return find(f$$35, reverse(xs$$54));\n}\nexport function tryFindBack(f$$36, xs$$57) {\n  return tryFind(f$$36, reverse(xs$$57));\n}\nexport function tryFindIndex(f$$37, xs$$60) {\n  return tryPickIndexed(function (i$$11, x$$39) {\n    return f$$37(x$$39) ? i$$11 : null;\n  }, xs$$60);\n}\nexport function tryFindIndexBack(f$$38, xs$$61) {\n  return tryFindIndexBack$$1(f$$38, ofList(xs$$61, Array));\n}\nexport function findIndex(f$$39, xs$$62) {\n  const matchValue$$7 = tryFindIndex(f$$39, xs$$62);\n\n  if (matchValue$$7 != null) {\n    const x$$40 = matchValue$$7 | 0;\n    return x$$40 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$40, xs$$63) {\n  return findIndexBack$$1(f$$40, ofList(xs$$63, Array));\n}\nexport function item(n, xs$$64) {\n  return findIndexed(function (i$$12, _arg1$$15) {\n    return n === i$$12;\n  }, xs$$64);\n}\nexport function tryItem(n$$1, xs$$65) {\n  return tryFindIndexed(function (i$$13, _arg1$$16) {\n    return n$$1 === i$$13;\n  }, xs$$65);\n}\nexport function filter(f$$41, xs$$66) {\n  return foldBack(function (x$$41, acc$$22) {\n    return f$$41(x$$41) ? L(x$$41, acc$$22) : acc$$22;\n  }, xs$$66, L());\n}\nexport function partition(f$$42, xs$$67) {\n  return fold(function (tupledArg$$1, x$$42) {\n    return f$$42(x$$42) ? [L(x$$42, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], L(x$$42, tupledArg$$1[1])];\n  }, [L(), L()], reverse(xs$$67));\n}\nexport function choose(f$$43, xs$$68) {\n  return reverse(fold(function (acc$$23, x$$43) {\n    const matchValue$$8 = f$$43(x$$43);\n\n    if (matchValue$$8 == null) {\n      return acc$$23;\n    } else {\n      const y$$13 = value$$1(matchValue$$8);\n      return L(y$$13, acc$$23);\n    }\n  }, L(), xs$$68));\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1(xs$$70) {\n    loop$$1: while (true) {\n      if (xs$$70.tail != null) {\n        const v$$1 = xs$$70.head;\n        const rest = xs$$70.tail;\n\n        if (eq.Equals(value, v$$1)) {\n          return true;\n        } else {\n          xs$$70 = rest;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, comparerFromEqualityComparer(eq$$1));\n    return filter(function f$$44(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$45) {\n  let xs$$72 = L();\n\n  for (let i$$14 = 1; i$$14 <= n$$2; i$$14++) {\n    xs$$72 = L(f$$45(n$$2 - i$$14), xs$$72);\n  }\n\n  return xs$$72;\n}\nexport function replicate(n$$3, x$$44) {\n  return initialize(n$$3, function (_arg1$$17) {\n    return x$$44;\n  });\n}\nexport function reduce(f$$46, _arg1$$18) {\n  if (_arg1$$18.tail != null) {\n    const t = _arg1$$18.tail;\n    const h = _arg1$$18.head;\n    return fold(f$$46, h, t);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$47, _arg1$$19) {\n  if (_arg1$$19.tail != null) {\n    const t$$1 = _arg1$$19.tail;\n    const h$$1 = _arg1$$19.head;\n    return foldBack(f$$47, t$$1, h$$1);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$48, xs$$73) {\n  return fold(function (acc$$24, x$$45) {\n    return acc$$24 ? f$$48(x$$45) : false;\n  }, true, xs$$73);\n}\nexport function forAll2(f$$49, xs$$74, ys$$18) {\n  return fold2(function (acc$$25, x$$46, y$$14) {\n    return acc$$25 ? f$$49(x$$46, y$$14) : false;\n  }, true, xs$$74, ys$$18);\n}\nexport function exists($arg$$146, $arg$$147) {\n  exists: while (true) {\n    const f$$50 = $arg$$146,\n          _arg1$$20 = $arg$$147;\n\n    if (_arg1$$20.tail != null) {\n      const xs$$75 = _arg1$$20.tail;\n      const x$$47 = _arg1$$20.head;\n\n      if (f$$50(x$$47)) {\n        return true;\n      } else {\n        $arg$$146 = f$$50;\n        $arg$$147 = xs$$75;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n  }\n}\nexport function exists2($arg$$148, $arg$$149, $arg$$150) {\n  exists2: while (true) {\n    const f$$51 = $arg$$148,\n          bs$$2 = $arg$$149,\n          cs$$2 = $arg$$150;\n    const matchValue$$9 = [bs$$2, cs$$2];\n    var $target$$151, x$$48, xs$$76, y$$15, ys$$19;\n\n    if (matchValue$$9[0].tail != null) {\n      if (matchValue$$9[1].tail != null) {\n        $target$$151 = 1;\n        x$$48 = matchValue$$9[0].head;\n        xs$$76 = matchValue$$9[0].tail;\n        y$$15 = matchValue$$9[1].head;\n        ys$$19 = matchValue$$9[1].tail;\n      } else {\n        $target$$151 = 2;\n      }\n    } else if (matchValue$$9[1].tail == null) {\n      $target$$151 = 0;\n    } else {\n      $target$$151 = 2;\n    }\n\n    switch ($target$$151) {\n      case 0:\n        {\n          return false;\n          break;\n        }\n\n      case 1:\n        {\n          if (f$$51(x$$48, y$$15)) {\n            return true;\n          } else {\n            $arg$$148 = f$$51;\n            $arg$$149 = xs$$76;\n            $arg$$150 = ys$$19;\n            continue exists2;\n          }\n\n          break;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n          break;\n        }\n    }\n  }\n}\nexport function unzip(xs$$77) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [L(tupledArg$$2[0], tupledArg$$3[0]), L(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$77, [L(), L()]);\n}\nexport function unzip3(xs$$78) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [L(tupledArg$$4[0], tupledArg$$5[0]), L(tupledArg$$4[1], tupledArg$$5[1]), L(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$78, [L(), L(), L()]);\n}\nexport function zip(xs$$79, ys$$20) {\n  return map2(function (x$$51, y$$18) {\n    return [x$$51, y$$18];\n  }, xs$$79, ys$$20);\n}\nexport function zip3(xs$$80, ys$$21, zs$$5) {\n  return map3(function (x$$52, y$$19, z$$5) {\n    return [x$$52, y$$19, z$$5];\n  }, xs$$80, ys$$21, zs$$5);\n}\nexport function sort(xs$$81, comparer$$2) {\n  var xs$$82;\n  return ofArray((xs$$82 = ofList$$1(xs$$81, Array), (xs$$82.sort(function comparer$$3(x$$53, y$$20) {\n    return comparer$$2.Compare(x$$53, y$$20);\n  }), xs$$82)));\n}\nexport function sortBy(projection, xs$$84, comparer$$4) {\n  var xs$$85;\n  return ofArray((xs$$85 = ofList$$1(xs$$84, Array), (xs$$85.sort(function comparer$$5(x$$54, y$$21) {\n    return comparer$$4.Compare(projection(x$$54), projection(y$$21));\n  }), xs$$85)));\n}\nexport function sortDescending(xs$$87, comparer$$6) {\n  var xs$$88;\n  return ofArray((xs$$88 = ofList$$1(xs$$87, Array), (xs$$88.sort(function comparer$$7(x$$55, y$$22) {\n    return comparer$$6.Compare(x$$55, y$$22) * -1;\n  }), xs$$88)));\n}\nexport function sortByDescending(projection$$1, xs$$90, comparer$$8) {\n  var xs$$91;\n  return ofArray((xs$$91 = ofList$$1(xs$$90, Array), (xs$$91.sort(function comparer$$9(x$$56, y$$23) {\n    return comparer$$8.Compare(projection$$1(x$$56), projection$$1(y$$23)) * -1;\n  }), xs$$91)));\n}\nexport function sortWith(comparer$$10, xs$$93) {\n  var xs$$94;\n  return ofArray((xs$$94 = ofList$$1(xs$$93, Array), (xs$$94.sort(comparer$$10), xs$$94)));\n}\nexport function sum(xs$$96) {\n  return fold(function (x$$57, y$$24) {\n    return x$$57 + y$$24;\n  }, 0, xs$$96);\n}\nexport function sumBy(f$$52, xs$$97) {\n  return fold(function (acc$$26, x$$58) {\n    return acc$$26 + f$$52(x$$58);\n  }, 0, xs$$97);\n}\nexport function maxBy(projection$$2, xs$$98, comparer$$12) {\n  return reduce(function (x$$59, y$$25) {\n    return comparer$$12.Compare(projection$$2(y$$25), projection$$2(x$$59)) > 0 ? y$$25 : x$$59;\n  }, xs$$98);\n}\nexport function max(li, comparer$$13) {\n  return reduce(function (x$$60, y$$26) {\n    return comparer$$13.Compare(y$$26, x$$60) > 0 ? y$$26 : x$$60;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$99, comparer$$14) {\n  return reduce(function (x$$61, y$$27) {\n    return comparer$$14.Compare(projection$$3(y$$27), projection$$3(x$$61)) > 0 ? x$$61 : y$$27;\n  }, xs$$99);\n}\nexport function min(xs$$100, comparer$$15) {\n  return reduce(function (x$$62, y$$28) {\n    return comparer$$15.Compare(y$$28, x$$62) > 0 ? x$$62 : y$$28;\n  }, xs$$100);\n}\nexport function average(zs$$6) {\n  const total = sum(zs$$6);\n  return total / length$$1(zs$$6);\n}\nexport function averageBy(g, zs$$7) {\n  const total$$1 = sumBy(g, zs$$7);\n  return total$$1 / length$$1(zs$$7);\n}\nexport function permute(f$$53, xs$$101) {\n  return ofArray(permute$$1(f$$53, ofList(xs$$101, Array)));\n}\nexport function skip(i$$15, xs$$103) {\n  const skipInner = function skipInner(i$$16, xs$$104) {\n    skipInner: while (true) {\n      const matchValue$$10 = [i$$16, xs$$104];\n\n      if (matchValue$$10[0] === 0) {\n        return xs$$104;\n      } else if (matchValue$$10[1].tail != null) {\n        const xs$$105 = matchValue$$10[1].tail;\n        i$$16 = i$$16 - 1;\n        xs$$104 = xs$$105;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n    }\n  };\n\n  const matchValue$$11 = [i$$15, xs$$103];\n\n  if (matchValue$$11[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$172, i$$19, xs$$107;\n\n    if (matchValue$$11[0] === 0) {\n      $target$$172 = 0;\n    } else if (matchValue$$11[0] === 1) {\n      if (matchValue$$11[1].tail != null) {\n        $target$$172 = 1;\n      } else {\n        $target$$172 = 2;\n        i$$19 = matchValue$$11[0];\n        xs$$107 = matchValue$$11[1];\n      }\n    } else {\n      $target$$172 = 2;\n      i$$19 = matchValue$$11[0];\n      xs$$107 = matchValue$$11[1];\n    }\n\n    switch ($target$$172) {\n      case 0:\n        {\n          return xs$$103;\n          break;\n        }\n\n      case 1:\n        {\n          const xs$$106 = matchValue$$11[1].tail;\n          return xs$$106;\n          break;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$19, xs$$107);\n          break;\n        }\n    }\n  }\n}\nexport function skipWhile($arg$$173, $arg$$174) {\n  var t$$2, h$$2;\n\n  skipWhile: while (true) {\n    const predicate = $arg$$173,\n          xs$$108 = $arg$$174;\n    var $target$$175, h$$3, t$$3;\n\n    if (xs$$108.tail != null) {\n      if (t$$2 = xs$$108.tail, (h$$2 = xs$$108.head, predicate(h$$2))) {\n        $target$$175 = 0;\n        h$$3 = xs$$108.head;\n        t$$3 = xs$$108.tail;\n      } else {\n        $target$$175 = 1;\n      }\n    } else {\n      $target$$175 = 1;\n    }\n\n    switch ($target$$175) {\n      case 0:\n        {\n          $arg$$173 = predicate;\n          $arg$$174 = t$$3;\n          continue skipWhile;\n          break;\n        }\n\n      case 1:\n        {\n          return xs$$108;\n          break;\n        }\n    }\n  }\n}\nexport function takeSplitAux(error, i$$20, acc$$27, xs$$109) {\n  takeSplitAux: while (true) {\n    const matchValue$$12 = [i$$20, xs$$109];\n\n    if (matchValue$$12[0] === 0) {\n      return [reverse(acc$$27), xs$$109];\n    } else if (matchValue$$12[1].tail != null) {\n      const xs$$110 = matchValue$$12[1].tail;\n      const x$$63 = matchValue$$12[1].head;\n      error = error;\n      i$$20 = i$$20 - 1;\n      acc$$27 = L(x$$63, acc$$27);\n      xs$$109 = xs$$110;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$27), xs$$109];\n      }\n    }\n  }\n}\nexport function take(i$$21, xs$$111) {\n  const matchValue$$13 = [i$$21, xs$$111];\n\n  if (matchValue$$13[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$176, i$$24, xs$$112;\n\n    if (matchValue$$13[0] === 0) {\n      $target$$176 = 0;\n    } else if (matchValue$$13[0] === 1) {\n      if (matchValue$$13[1].tail != null) {\n        $target$$176 = 1;\n      } else {\n        $target$$176 = 2;\n        i$$24 = matchValue$$13[0];\n        xs$$112 = matchValue$$13[1];\n      }\n    } else {\n      $target$$176 = 2;\n      i$$24 = matchValue$$13[0];\n      xs$$112 = matchValue$$13[1];\n    }\n\n    switch ($target$$176) {\n      case 0:\n        {\n          return L();\n          break;\n        }\n\n      case 1:\n        {\n          const x$$64 = matchValue$$13[1].head;\n          return L(x$$64, L());\n          break;\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$24, L(), xs$$112)[0];\n          break;\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$113) {\n  if (xs$$113.tail != null) {\n    if (xs$$113.tail.tail == null) {\n      if (predicate$$1(xs$$113.head)) {\n        return xs$$113;\n      } else {\n        return xs$$113.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$113.head)) {\n        return L();\n      } else {\n        return L(xs$$113.head, takeWhile(predicate$$1, xs$$113.tail));\n      }\n    }\n  } else {\n    return xs$$113;\n  }\n}\nexport function truncate(i$$25, xs$$115) {\n  const matchValue$$14 = [i$$25, xs$$115];\n\n  if (matchValue$$14[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$179, i$$28, xs$$116;\n\n    if (matchValue$$14[0] === 0) {\n      $target$$179 = 0;\n    } else if (matchValue$$14[0] === 1) {\n      if (matchValue$$14[1].tail != null) {\n        $target$$179 = 1;\n      } else {\n        $target$$179 = 2;\n        i$$28 = matchValue$$14[0];\n        xs$$116 = matchValue$$14[1];\n      }\n    } else {\n      $target$$179 = 2;\n      i$$28 = matchValue$$14[0];\n      xs$$116 = matchValue$$14[1];\n    }\n\n    switch ($target$$179) {\n      case 0:\n        {\n          return L();\n          break;\n        }\n\n      case 1:\n        {\n          const x$$67 = matchValue$$14[1].head;\n          return L(x$$67, L());\n          break;\n        }\n\n      case 2:\n        {\n          return takeSplitAux(false, i$$28, L(), xs$$116)[0];\n          break;\n        }\n    }\n  }\n}\nexport function splitAt(i$$29, xs$$117) {\n  const matchValue$$15 = [i$$29, xs$$117];\n\n  if (matchValue$$15[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$180, i$$32, xs$$119;\n\n    if (matchValue$$15[0] === 0) {\n      $target$$180 = 0;\n    } else if (matchValue$$15[0] === 1) {\n      if (matchValue$$15[1].tail != null) {\n        $target$$180 = 1;\n      } else {\n        $target$$180 = 2;\n        i$$32 = matchValue$$15[0];\n        xs$$119 = matchValue$$15[1];\n      }\n    } else {\n      $target$$180 = 2;\n      i$$32 = matchValue$$15[0];\n      xs$$119 = matchValue$$15[1];\n    }\n\n    switch ($target$$180) {\n      case 0:\n        {\n          return [L(), xs$$117];\n          break;\n        }\n\n      case 1:\n        {\n          const xs$$118 = matchValue$$15[1].tail;\n          const x$$68 = matchValue$$15[1].head;\n          return [L(x$$68, L()), xs$$118];\n          break;\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$32, L(), xs$$119);\n          break;\n        }\n    }\n  }\n}\nexport function toSeq(xs$$120) {\n  return unfold$$1(function (_arg1$$21) {\n    if (_arg1$$21.tail != null) {\n      const xs$$121 = _arg1$$21.tail;\n      const x$$69 = _arg1$$21.head;\n      return [x$$69, xs$$121];\n    } else {\n      return null;\n    }\n  }, xs$$120);\n}\nexport function ofSeq(xs$$122) {\n  return foldBack$$2(function (x$$70, acc$$28) {\n    return L(x$$70, acc$$28);\n  }, xs$$122, L());\n}\nexport function concat(lists) {\n  return foldBack$$2(function (list$$2, state$$3) {\n    return foldBack$$3(function folder(x$$71, acc$$29) {\n      return L(x$$71, acc$$29);\n    }, list$$2, state$$3);\n  }, lists, L());\n}\nexport function slice(lower, upper, xs$$123) {\n  const lower$$1 = defaultArg(lower, -1) | 0;\n  const upper$$1 = defaultArg(upper, -1) | 0;\n  return reverse(foldIndexed(function f$$54(i$$33, acc$$30, x$$72) {\n    if ((lower$$1 === -1 ? true : lower$$1 <= i$$33) ? upper$$1 === -1 ? true : i$$33 <= upper$$1 : false) {\n      return L(x$$72, acc$$30);\n    } else {\n      return acc$$30;\n    }\n  }, L(), xs$$123));\n}\nexport function distinctBy(projection$$4, xs$$126, eq$$2) {\n  const hashSet = createMutable([], comparerFromEqualityComparer(eq$$2));\n  return filter(function f$$55($arg$$1) {\n    return addToSet(projection$$4($arg$$1), hashSet);\n  }, xs$$126);\n}\nexport function distinct(xs$$128, eq$$3) {\n  return distinctBy(function (x$$73) {\n    return x$$73;\n  }, xs$$128, eq$$3);\n}\nexport function groupBy(projection$$5, xs$$129, eq$$4) {\n  const dict = createMutable$$1([], comparerFromEqualityComparer(eq$$4));\n  iterate$$1(function (v$$2) {\n    const key = projection$$5(v$$2);\n\n    if (dict.has(key)) {\n      dict.set(key, L(v$$2, dict.get(key)));\n    } else {\n      dict.set(key, L(v$$2, L()));\n    }\n  }, xs$$129);\n  return ofSeq$$1(map$$1(function mapping(kv) {\n    return [kv[0], reverse(kv[1])];\n  }, dict));\n}\nexport function countBy(projection$$6, xs$$130, eq$$5) {\n  const dict$$1 = createMutable$$1([], comparerFromEqualityComparer(eq$$5));\n  iterate(function (v$$3) {\n    const key$$1 = projection$$6(v$$3);\n    const matchValue$$16 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$16[0]) {\n      matchValue$$16[1].contents = matchValue$$16[1].contents + 1;\n    } else {\n      dict$$1.set(key$$1, new FSharpRef(1));\n    }\n  }, xs$$130);\n  let result$$1 = L();\n  iterate$$1(function (group) {\n    result$$1 = L([group[0], group[1].contents], result$$1);\n  }, dict$$1);\n  return result$$1;\n}\nexport function where(predicate$$2, xs$$131) {\n  return filter(predicate$$2, xs$$131);\n}","import { Record, L, declare, Union } from \"./Types\";\nimport { value as value$$3, some } from \"./Option\";\nimport { fold as fold$$1 } from \"./List\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$1, unfold, getEnumerator } from \"./Seq\";\nimport { join, toText, printf } from \"./String\";\nimport { extend, THIS_REF, compare, downcast, structuralHash } from \"./Util\";\nexport const MapTree$00602 = declare(function MapTree$00602(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTreeModule$$$sizeAux(acc, m) {\n  MapTreeModule$$$sizeAux: while (true) {\n    if (m.tag === 1) {\n      return acc + 1 | 0;\n    } else if (m.tag === 2) {\n      const r = m.fields[3];\n      const l = m.fields[2];\n      acc = MapTreeModule$$$sizeAux(acc + 1, l);\n      m = r;\n      continue MapTreeModule$$$sizeAux;\n    } else {\n      return acc | 0;\n    }\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  if (_arg1.tag === 1) {\n    return 1;\n  } else if (_arg1.tag === 2) {\n    const h = _arg1.fields[4] | 0;\n    return h | 0;\n  } else {\n    return 0;\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  const matchValue = [l$$1, r$$1];\n  var $target$$3;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$3 = 0;\n    } else {\n      $target$$3 = 1;\n    }\n  } else {\n    $target$$3 = 1;\n  }\n\n  switch ($target$$3) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n        break;\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n        break;\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      const t2v = t2.fields[1];\n      const t2r = t2.fields[3];\n      const t2l = t2.fields[2];\n      const t2k = t2.fields[0];\n\n      if (MapTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 2) {\n          const t2lv = t2l.fields[1];\n          const t2lr = t2l.fields[3];\n          const t2ll = t2l.fields[2];\n          const t2lk = t2l.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2ll), t2lk, t2lv, MapTreeModule$$$mk(t2lr, t2k, t2v, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2l), t2k, t2v, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      const t1v = t1.fields[1];\n      const t1r = t1.fields[3];\n      const t1l = t1.fields[2];\n      const t1k = t1.fields[0];\n\n      if (MapTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 2) {\n          const t1rv = t1r.fields[1];\n          const t1rr = t1r.fields[3];\n          const t1rl = t1r.fields[2];\n          const t1rk = t1r.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1l, t1k, t1v, t1rl), t1rk, t1rv, MapTreeModule$$$mk(t1rr, k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1l, t1k, t1v, MapTreeModule$$$mk(t1r, k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  if (m$$3.tag === 1) {\n    const k2 = m$$3.fields[0];\n    const c = comparer.Compare(k$$2, k2) | 0;\n\n    if (c < 0) {\n      return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n    } else if (c === 0) {\n      return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n    } else {\n      return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n    }\n  } else if (m$$3.tag === 2) {\n    const v2 = m$$3.fields[1];\n    const r$$2 = m$$3.fields[3];\n    const l$$2 = m$$3.fields[2];\n    const k2$$1 = m$$3.fields[0];\n    const h$$1 = m$$3.fields[4] | 0;\n    const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n    if (c$$1 < 0) {\n      return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, l$$2), k2$$1, v2, r$$2);\n    } else if (c$$1 === 0) {\n      return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, l$$2, r$$2, h$$1);\n    } else {\n      return MapTreeModule$$$rebalance(l$$2, k2$$1, v2, MapTreeModule$$$add(comparer, k$$2, v$$2, r$$2));\n    }\n  } else {\n    return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n  }\n}\nexport function MapTreeModule$$$find(comparer$$1, k$$3, m$$4) {\n  MapTreeModule$$$find: while (true) {\n    if (m$$4.tag === 1) {\n      const v2$$1 = m$$4.fields[1];\n      const k2$$2 = m$$4.fields[0];\n      const c$$2 = comparer$$1.Compare(k$$3, k2$$2) | 0;\n\n      if (c$$2 === 0) {\n        return v2$$1;\n      } else {\n        throw new Error(\"key not found\");\n      }\n    } else if (m$$4.tag === 2) {\n      const v2$$2 = m$$4.fields[1];\n      const r$$3 = m$$4.fields[3];\n      const l$$3 = m$$4.fields[2];\n      const k2$$3 = m$$4.fields[0];\n      const c$$3 = comparer$$1.Compare(k$$3, k2$$3) | 0;\n\n      if (c$$3 < 0) {\n        comparer$$1 = comparer$$1;\n        k$$3 = k$$3;\n        m$$4 = l$$3;\n        continue MapTreeModule$$$find;\n      } else if (c$$3 === 0) {\n        return v2$$2;\n      } else {\n        comparer$$1 = comparer$$1;\n        k$$3 = k$$3;\n        m$$4 = r$$3;\n        continue MapTreeModule$$$find;\n      }\n    } else {\n      throw new Error(\"key not found\");\n    }\n  }\n}\nexport function MapTreeModule$$$tryFind(comparer$$2, k$$4, m$$5) {\n  MapTreeModule$$$tryFind: while (true) {\n    if (m$$5.tag === 1) {\n      const v2$$3 = m$$5.fields[1];\n      const k2$$4 = m$$5.fields[0];\n      const c$$4 = comparer$$2.Compare(k$$4, k2$$4) | 0;\n\n      if (c$$4 === 0) {\n        return some(v2$$3);\n      } else {\n        return null;\n      }\n    } else if (m$$5.tag === 2) {\n      const v2$$4 = m$$5.fields[1];\n      const r$$4 = m$$5.fields[3];\n      const l$$4 = m$$5.fields[2];\n      const k2$$5 = m$$5.fields[0];\n      const c$$5 = comparer$$2.Compare(k$$4, k2$$5) | 0;\n\n      if (c$$5 < 0) {\n        comparer$$2 = comparer$$2;\n        k$$4 = k$$4;\n        m$$5 = l$$4;\n        continue MapTreeModule$$$tryFind;\n      } else if (c$$5 === 0) {\n        return some(v2$$4);\n      } else {\n        comparer$$2 = comparer$$2;\n        k$$4 = k$$4;\n        m$$5 = r$$4;\n        continue MapTreeModule$$$tryFind;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($arg$$10, $arg$$11, $arg$$12, $arg$$13, $arg$$14) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $arg$$10,\n          f$$1 = $arg$$11,\n          s = $arg$$12,\n          acc_0 = $arg$$13,\n          acc_1 = $arg$$14;\n    const acc$$1 = [acc_0, acc_1];\n\n    if (s.tag === 1) {\n      const v$$4 = s.fields[1];\n      const k$$6 = s.fields[0];\n      return MapTreeModule$$$partition1(comparer$$4, f$$1, k$$6, v$$4, acc$$1[0], acc$$1[1]);\n    } else if (s.tag === 2) {\n      const v$$5 = s.fields[1];\n      const r$$5 = s.fields[3];\n      const l$$5 = s.fields[2];\n      const k$$7 = s.fields[0];\n      const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, r$$5, acc$$1[0], acc$$1[1]);\n      const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, k$$7, v$$5, acc$$2[0], acc$$2[1]);\n      $arg$$10 = comparer$$4;\n      $arg$$11 = f$$1;\n      $arg$$12 = l$$5;\n      $arg$$13 = acc$$3[0];\n      $arg$$14 = acc$$3[1];\n      continue MapTreeModule$$$partitionAux;\n    } else {\n      return acc$$1;\n    }\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($arg$$23, $arg$$24, $arg$$25, $arg$$26) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$23,\n          f$$4 = $arg$$24,\n          s$$2 = $arg$$25,\n          acc$$5 = $arg$$26;\n\n    if (s$$2.tag === 1) {\n      const v$$7 = s$$2.fields[1];\n      const k$$9 = s$$2.fields[0];\n      return MapTreeModule$$$filter1(comparer$$7, f$$4, k$$9, v$$7, acc$$5);\n    } else if (s$$2.tag === 2) {\n      const v$$8 = s$$2.fields[1];\n      const r$$6 = s$$2.fields[3];\n      const l$$6 = s$$2.fields[2];\n      const k$$10 = s$$2.fields[0];\n      const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, l$$6, acc$$5);\n      const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, k$$10, v$$8, acc$$6);\n      $arg$$23 = comparer$$7;\n      $arg$$24 = f$$4;\n      $arg$$25 = r$$6;\n      $arg$$26 = acc$$7;\n      continue MapTreeModule$$$filterAux;\n    } else {\n      return acc$$5;\n    }\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  if (m$$6.tag === 1) {\n    const v2$$5 = m$$6.fields[1];\n    const k2$$6 = m$$6.fields[0];\n    return [k2$$6, v2$$5, new MapTree$00602(0, \"MapEmpty\")];\n  } else if (m$$6.tag === 2) {\n    const v2$$6 = m$$6.fields[1];\n    const r$$7 = m$$6.fields[3];\n    const l$$7 = m$$6.fields[2];\n    const k2$$7 = m$$6.fields[0];\n\n    if (l$$7.tag === 0) {\n      return [k2$$7, v2$$6, r$$7];\n    } else {\n      const patternInput = MapTreeModule$$$spliceOutSuccessor(l$$7);\n      return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], k2$$7, v2$$6, r$$7)];\n    }\n  } else {\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  if (m$$7.tag === 1) {\n    const k2$$8 = m$$7.fields[0];\n    const c$$6 = comparer$$9.Compare(k$$11, k2$$8) | 0;\n\n    if (c$$6 === 0) {\n      return new MapTree$00602(0, \"MapEmpty\");\n    } else {\n      return m$$7;\n    }\n  } else if (m$$7.tag === 2) {\n    const v2$$7 = m$$7.fields[1];\n    const r$$8 = m$$7.fields[3];\n    const l$$8 = m$$7.fields[2];\n    const k2$$9 = m$$7.fields[0];\n    const c$$7 = comparer$$9.Compare(k$$11, k2$$9) | 0;\n\n    if (c$$7 < 0) {\n      return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, l$$8), k2$$9, v2$$7, r$$8);\n    } else if (c$$7 === 0) {\n      const matchValue$$1 = [l$$8, r$$8];\n\n      if (matchValue$$1[0].tag === 0) {\n        return r$$8;\n      } else if (matchValue$$1[1].tag === 0) {\n        return l$$8;\n      } else {\n        const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(r$$8);\n        return MapTreeModule$$$mk(l$$8, patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n      }\n    } else {\n      return MapTreeModule$$$rebalance(l$$8, k2$$9, v2$$7, MapTreeModule$$$remove(comparer$$9, k$$11, r$$8));\n    }\n  } else {\n    return MapTreeModule$$$empty();\n  }\n}\nexport function MapTreeModule$$$mem(comparer$$10, k$$12, m$$8) {\n  MapTreeModule$$$mem: while (true) {\n    if (m$$8.tag === 1) {\n      const k2$$10 = m$$8.fields[0];\n      return comparer$$10.Compare(k$$12, k2$$10) === 0;\n    } else if (m$$8.tag === 2) {\n      const r$$9 = m$$8.fields[3];\n      const l$$9 = m$$8.fields[2];\n      const k2$$11 = m$$8.fields[0];\n      const c$$8 = comparer$$10.Compare(k$$12, k2$$11) | 0;\n\n      if (c$$8 < 0) {\n        comparer$$10 = comparer$$10;\n        k$$12 = k$$12;\n        m$$8 = l$$9;\n        continue MapTreeModule$$$mem;\n      } else if (c$$8 === 0) {\n        return true;\n      } else {\n        comparer$$10 = comparer$$10;\n        k$$12 = k$$12;\n        m$$8 = r$$9;\n        continue MapTreeModule$$$mem;\n      }\n    } else {\n      return false;\n    }\n  }\n}\nexport function MapTreeModule$$$iter(f$$6, m$$9) {\n  if (m$$9.tag === 1) {\n    const v2$$8 = m$$9.fields[1];\n    const k2$$12 = m$$9.fields[0];\n    f$$6(k2$$12, v2$$8);\n  } else if (m$$9.tag === 2) {\n    const v2$$9 = m$$9.fields[1];\n    const r$$10 = m$$9.fields[3];\n    const l$$10 = m$$9.fields[2];\n    const k2$$13 = m$$9.fields[0];\n    MapTreeModule$$$iter(f$$6, l$$10);\n    f$$6(k2$$13, v2$$9);\n    MapTreeModule$$$iter(f$$6, r$$10);\n  }\n}\nexport function MapTreeModule$$$tryPick($arg$$32, $arg$$33) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $arg$$32,\n          m$$10 = $arg$$33;\n\n    if (m$$10.tag === 1) {\n      const v2$$10 = m$$10.fields[1];\n      const k2$$14 = m$$10.fields[0];\n      return f$$7(k2$$14, v2$$10);\n    } else if (m$$10.tag === 2) {\n      const v2$$11 = m$$10.fields[1];\n      const r$$11 = m$$10.fields[3];\n      const l$$11 = m$$10.fields[2];\n      const k2$$15 = m$$10.fields[0];\n      const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, l$$11);\n\n      if (matchValue$$2 == null) {\n        const matchValue$$3 = f$$7(k2$$15, v2$$11);\n\n        if (matchValue$$3 == null) {\n          $arg$$32 = f$$7;\n          $arg$$33 = r$$11;\n          continue MapTreeModule$$$tryPick;\n        } else {\n          const res$$1 = matchValue$$3;\n          return res$$1;\n        }\n      } else {\n        const res = matchValue$$2;\n        return res;\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexport function MapTreeModule$$$exists($arg$$34, $arg$$35) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $arg$$34,\n          m$$11 = $arg$$35;\n\n    if (m$$11.tag === 1) {\n      const v2$$12 = m$$11.fields[1];\n      const k2$$16 = m$$11.fields[0];\n      return f$$8(k2$$16, v2$$12);\n    } else if (m$$11.tag === 2) {\n      const v2$$13 = m$$11.fields[1];\n      const r$$12 = m$$11.fields[3];\n      const l$$12 = m$$11.fields[2];\n      const k2$$17 = m$$11.fields[0];\n\n      if (MapTreeModule$$$exists(f$$8, l$$12) ? true : f$$8(k2$$17, v2$$13)) {\n        return true;\n      } else {\n        $arg$$34 = f$$8;\n        $arg$$35 = r$$12;\n        continue MapTreeModule$$$exists;\n      }\n    } else {\n      return false;\n    }\n  }\n}\nexport function MapTreeModule$$$forall($arg$$36, $arg$$37) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $arg$$36,\n          m$$12 = $arg$$37;\n\n    if (m$$12.tag === 1) {\n      const v2$$14 = m$$12.fields[1];\n      const k2$$18 = m$$12.fields[0];\n      return f$$9(k2$$18, v2$$14);\n    } else if (m$$12.tag === 2) {\n      const v2$$15 = m$$12.fields[1];\n      const r$$13 = m$$12.fields[3];\n      const l$$13 = m$$12.fields[2];\n      const k2$$19 = m$$12.fields[0];\n\n      if (MapTreeModule$$$forall(f$$9, l$$13) ? f$$9(k2$$19, v2$$15) : false) {\n        $arg$$36 = f$$9;\n        $arg$$37 = r$$13;\n        continue MapTreeModule$$$forall;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  if (m$$13.tag === 1) {\n    const v$$9 = m$$13.fields[1];\n    const k$$13 = m$$13.fields[0];\n    return new MapTree$00602(1, \"MapOne\", k$$13, f$$10(v$$9));\n  } else if (m$$13.tag === 2) {\n    const v$$10 = m$$13.fields[1];\n    const r$$14 = m$$13.fields[3];\n    const l$$14 = m$$13.fields[2];\n    const k$$14 = m$$13.fields[0];\n    const h$$2 = m$$13.fields[4] | 0;\n    const l2 = MapTreeModule$$$map(f$$10, l$$14);\n    const v2$$16 = f$$10(v$$10);\n    const r2 = MapTreeModule$$$map(f$$10, r$$14);\n    return new MapTree$00602(2, \"MapNode\", k$$14, v2$$16, l2, r2, h$$2);\n  } else {\n    return MapTreeModule$$$empty();\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  if (m$$14.tag === 1) {\n    const v$$11 = m$$14.fields[1];\n    const k$$15 = m$$14.fields[0];\n    return new MapTree$00602(1, \"MapOne\", k$$15, f$$11(k$$15, v$$11));\n  } else if (m$$14.tag === 2) {\n    const v$$12 = m$$14.fields[1];\n    const r$$15 = m$$14.fields[3];\n    const l$$15 = m$$14.fields[2];\n    const k$$16 = m$$14.fields[0];\n    const h$$3 = m$$14.fields[4] | 0;\n    const l2$$1 = MapTreeModule$$$mapi(f$$11, l$$15);\n    const v2$$17 = f$$11(k$$16, v$$12);\n    const r2$$1 = MapTreeModule$$$mapi(f$$11, r$$15);\n    return new MapTree$00602(2, \"MapNode\", k$$16, v2$$17, l2$$1, r2$$1, h$$3);\n  } else {\n    return MapTreeModule$$$empty();\n  }\n}\nexport function MapTreeModule$$$foldBack($arg$$42, $arg$$43, $arg$$44) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $arg$$42,\n          m$$15 = $arg$$43,\n          x$$1 = $arg$$44;\n\n    if (m$$15.tag === 1) {\n      const v$$13 = m$$15.fields[1];\n      const k$$17 = m$$15.fields[0];\n      return f$$12(k$$17, v$$13, x$$1);\n    } else if (m$$15.tag === 2) {\n      const v$$14 = m$$15.fields[1];\n      const r$$16 = m$$15.fields[3];\n      const l$$16 = m$$15.fields[2];\n      const k$$18 = m$$15.fields[0];\n      const x$$2 = MapTreeModule$$$foldBack(f$$12, r$$16, x$$1);\n      const x$$3 = f$$12(k$$18, v$$14, x$$2);\n      $arg$$42 = f$$12;\n      $arg$$43 = l$$16;\n      $arg$$44 = x$$3;\n      continue MapTreeModule$$$foldBack;\n    } else {\n      return x$$1;\n    }\n  }\n}\nexport function MapTreeModule$$$fold($arg$$45, $arg$$46, $arg$$47) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $arg$$45,\n          x$$4 = $arg$$46,\n          m$$16 = $arg$$47;\n\n    if (m$$16.tag === 1) {\n      const v$$15 = m$$16.fields[1];\n      const k$$19 = m$$16.fields[0];\n      return f$$13(x$$4, k$$19, v$$15);\n    } else if (m$$16.tag === 2) {\n      const v$$16 = m$$16.fields[1];\n      const r$$17 = m$$16.fields[3];\n      const l$$17 = m$$16.fields[2];\n      const k$$20 = m$$16.fields[0];\n      const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, l$$17);\n      const x$$6 = f$$13(x$$5, k$$20, v$$16);\n      $arg$$45 = f$$13;\n      $arg$$46 = x$$6;\n      $arg$$47 = r$$17;\n      continue MapTreeModule$$$fold;\n    } else {\n      return x$$4;\n    }\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  if (m$$17.tag === 1) {\n    const v$$17 = m$$17.fields[1];\n    const k$$21 = m$$17.fields[0];\n    const cLoKey = comparer$$11.Compare(lo, k$$21) | 0;\n    const cKeyHi = comparer$$11.Compare(k$$21, hi) | 0;\n    const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(k$$21, v$$17, x$$7) : x$$7;\n    return x$$8;\n  } else if (m$$17.tag === 2) {\n    const v$$18 = m$$17.fields[1];\n    const r$$18 = m$$17.fields[3];\n    const l$$18 = m$$17.fields[2];\n    const k$$22 = m$$17.fields[0];\n    const cLoKey$$1 = comparer$$11.Compare(lo, k$$22) | 0;\n    const cKeyHi$$1 = comparer$$11.Compare(k$$22, hi) | 0;\n    const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, l$$18, x$$7) : x$$7;\n    const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(k$$22, v$$18, x$$9) : x$$9;\n    const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, r$$18, x$$10) : x$$10;\n    return x$$11;\n  } else {\n    return x$$7;\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop(m$$19, acc$$8) {\n  MapTreeModule$$$loop: while (true) {\n    if (m$$19.tag === 1) {\n      const v$$19 = m$$19.fields[1];\n      const k$$23 = m$$19.fields[0];\n      return L([k$$23, v$$19], acc$$8);\n    } else if (m$$19.tag === 2) {\n      const v$$20 = m$$19.fields[1];\n      const r$$19 = m$$19.fields[3];\n      const l$$19 = m$$19.fields[2];\n      const k$$24 = m$$19.fields[0];\n      m$$19 = l$$19;\n      acc$$8 = L([k$$24, v$$20], MapTreeModule$$$loop(r$$19, acc$$8));\n      continue MapTreeModule$$$loop;\n    } else {\n      return acc$$8;\n    }\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, L());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator(comparer$$14, acc$$10, e) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      const $var$$60 = comparer$$14;\n      acc$$10 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      e = e;\n      comparer$$14 = $var$$60;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    ie.Dispose();\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function MapTreeModule$002EMapIterator$00602(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$$$collapseLHS(stack) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        stack = L(stack.head.fields[2], L(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), L(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        stack = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return L();\n    }\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(L(s$$5, L())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function MapTreeModule$002EmkIEnumerator$0027$00602(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this != null ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601(MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7));\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function FSharpMap(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this != null ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryPick$$Z52B03DBD(__$$9, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$9.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$10, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$10.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$11, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$11.comparer, MapTreeModule$$$filter(__$$11.comparer, f$$19, __$$11.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$12, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$12.tree);\n}\nexport function FSharpMap$$Fold(__$$13, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$13.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$14, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$14.comparer, lo$$2, hi$$2, f$$22, __$$14.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$15, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$15.tree);\n}\nexport function FSharpMap$$MapRange$$Z1D9544EB(__$$16, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$16.comparer, MapTreeModule$$$map(f$$24, __$$16.tree));\n}\nexport function FSharpMap$$Map$$Z5CD84AAA(__$$17, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$mapi(f$$25, __$$17.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$18, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$18.comparer, f$$26, __$$18.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$19) {\n  return MapTreeModule$$$size(__$$19.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$20, k$$30) {\n  return MapTreeModule$$$mem(__$$20.comparer, k$$30, __$$20.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$21, k$$31) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$21.comparer, MapTreeModule$$$remove(__$$21.comparer, k$$31, __$$21.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$22, k$$32) {\n  return MapTreeModule$$$tryFind(__$$22.comparer, k$$32, __$$22.tree);\n}\nexport function FSharpMap$$ToList(__$$23) {\n  return MapTreeModule$$$toList(__$$23.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  return \"map [\" + join(\"; \", map$$1(function mapping(kv) {\n    return toText(printf(\"(%A, %A)\"))(kv[0])(kv[1]);\n  }, this$)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const activePatternResult2387 = e$$1.Current;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult2387[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult2387[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$24 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$24.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  const m2 = downcast(obj);\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m2));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$6 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$6[0]) {\n          if (matchValue$$6[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$6[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      e2.Dispose();\n    }\n  } finally {\n    e1.Dispose();\n  }\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$33, v$$25, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$33, v$$25);\n}\nexport function find(k$$34, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$34);\n}\nexport function tryFind(k$$35, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$35);\n}\nexport function remove(k$$36, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$36);\n}\nexport function containsKey(k$$37, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$37);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$Z52B03DBD(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$7 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$7 != null) {\n    const res$$5 = value$$3(matchValue$$7);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$Z1D9544EB(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z5CD84AAA(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  const _arg1$$1 = MapTreeModule$$$tryPick(function f$$39(k$$38, v$$26) {\n    if (f$$38(k$$38, v$$26)) {\n      return some(k$$38);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$41));\n\n  if (_arg1$$1 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$39 = value$$3(_arg1$$1);\n    return k$$39;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  return MapTreeModule$$$tryPick(function f$$41(k$$40, v$$27) {\n    if (f$$40(k$$40, v$$27)) {\n      return some(k$$40);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$43));\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  const res$$6 = new Array(FSharpMap$$get_Count(m$$46));\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$41) {\n      return MapTreeModule$$$find(comparer$$22, k$$41, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      return map$$1(function mapping$$1(kv$$1) {\n        return kv$$1[0];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    set(k$$42, v$$28) {\n      const this$$$3 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$42, v$$28, tree$$1);\n      return this$$$3;\n    },\n\n    values() {\n      return map$$1(function mapping$$2(kv$$2) {\n        return kv$$2[1];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    }\n\n  };\n}\n\nexport function createMutable(source$$3, comparer$$23) {\n  return createMutablePrivate(comparer$$23, MapTreeModule$$$ofSeq(comparer$$23, source$$3));\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$29) {\n    const key = projection(v$$29);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$29);\n    } else {\n      dict.set(key, Array.from([v$$29]));\n    }\n  }, xs);\n  return map$$1(function mapping$$3(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n  }, xs$$1);\n  return map$$1(function mapping$$4(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EGeneric$002EIEnumerator$00601($this$$119) {\n  return extend(MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator($this$$119), MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable($this$$119), {\n    [THIS_REF]: $this$$119,\n\n    get Current() {\n      return MapTreeModule$$$current($this$$119.i);\n    }\n\n  });\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002ECollections$002EIEnumerator($this$$120) {\n  return {\n    [THIS_REF]: $this$$120,\n\n    MoveNext() {\n      return MapTreeModule$$$moveNext($this$$120.i);\n    },\n\n    Reset() {\n      $this$$120.i = MapTreeModule$$$mkIterator($this$$120.s);\n    }\n\n  };\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$System$002EIDisposable($this$$121) {\n  return {\n    [THIS_REF]: $this$$121,\n\n    Dispose() {}\n\n  };\n}","import { createMutable as createMutableMap } from \"./Map\";\nimport { createMutable as createMutableSet } from \"./Set\";\nimport { combineHashCodes, compare, compareArrays, equals, equalArrays, identityHash, structuralHash, numberHash, toString } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + toString(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map(x => toString(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function L(h, t) {\n    return new List(h, t);\n}\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + toString(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map(toString).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    let hashes = this.fields.map(structuralHash);\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + toString(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter(k => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map(k => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n}, FSharpException);\nexport const Dictionary = declare(function Dictionary(source, comparer) {\n    this.__mutableMap = createMutableMap(source, comparer);\n});\nObject.defineProperty(Dictionary.prototype, \"size\", { get: function () {\n        return this.__mutableMap.size;\n    } });\nDictionary.prototype.clear = function () { return this.__mutableMap.clear(); };\nDictionary.prototype.delete = function (k) { return this.__mutableMap.delete(k); };\nDictionary.prototype.entries = function () { return this.__mutableMap.entries(); };\nDictionary.prototype.get = function (k) { return this.__mutableMap.get(k); };\nDictionary.prototype.has = function (k) { return this.__mutableMap.has(k); };\nDictionary.prototype.keys = function () { return this.__mutableMap.keys(); };\nDictionary.prototype.set = function (k, v) { return this.__mutableMap.set(k, v); };\nDictionary.prototype.values = function () { return this.__mutableMap.values(); };\nDictionary.prototype[Symbol.iterator] = function () { return this.__mutableMap[Symbol.iterator](); };\nexport const HashSet = declare(function HashSet(source, comparer) {\n    this.__mutableSet = createMutableSet(source, comparer);\n});\nObject.defineProperty(HashSet.prototype, \"size\", { get: function () {\n        return this.__mutableSet.size;\n    } });\nHashSet.prototype.add = function (v) { return this.__mutableSet.add(v); };\nHashSet.prototype.clear = function () { return this.__mutableSet.clear(); };\nHashSet.prototype.delete = function (k) { return this.__mutableSet.delete(k); };\nHashSet.prototype.has = function (k) { return this.__mutableSet.has(k); };\nHashSet.prototype.values = function () { return this.__mutableSet.values(); };\nHashSet.prototype[Symbol.iterator] = function () { return this.__mutableSet[Symbol.iterator](); };\nexport const Attribute = declare(function Attribute() { });\n","module Fable.Helpers.React\n\nopen FSharp.Reflection\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.Import\n\nmodule rec Props =\n    type IProp =\n        interface end\n\n    type IHTMLProp =\n        inherit IProp\n\n    type IFragmentProp =\n        inherit IProp\n\n    type FragmentProp =\n        | Key of string\n        interface IFragmentProp\n\n    type Prop =\n        | Key of string\n        | Ref of (Browser.Element->unit)\n        interface IHTMLProp\n\n    type DangerousHtml = {\n        __html: string\n    }\n\n    type DOMAttr =\n        | DangerouslySetInnerHTML of DangerousHtml\n        | OnCut of (React.ClipboardEvent -> unit)\n        | OnPaste of (React.ClipboardEvent -> unit)\n        | OnCompositionEnd of (React.CompositionEvent -> unit)\n        | OnCompositionStart of (React.CompositionEvent -> unit)\n        | OnCopy of (React.ClipboardEvent -> unit)\n        | OnCompositionUpdate of (React.CompositionEvent -> unit)\n        | OnFocus of (React.FocusEvent -> unit)\n        | OnBlur of (React.FocusEvent -> unit)\n        | OnChange of (React.FormEvent -> unit)\n        | OnInput of (React.FormEvent -> unit)\n        | OnSubmit of (React.FormEvent -> unit)\n        | OnLoad of (React.SyntheticEvent -> unit)\n        | OnError of (React.SyntheticEvent -> unit)\n        | OnKeyDown of (React.KeyboardEvent -> unit)\n        | OnKeyPress of (React.KeyboardEvent -> unit)\n        | OnKeyUp of (React.KeyboardEvent -> unit)\n        | OnAbort of (React.SyntheticEvent -> unit)\n        | OnCanPlay of (React.SyntheticEvent -> unit)\n        | OnCanPlayThrough of (React.SyntheticEvent -> unit)\n        | OnDurationChange of (React.SyntheticEvent -> unit)\n        | OnEmptied of (React.SyntheticEvent -> unit)\n        | OnEncrypted of (React.SyntheticEvent -> unit)\n        | OnEnded of (React.SyntheticEvent -> unit)\n        | OnLoadedData of (React.SyntheticEvent -> unit)\n        | OnLoadedMetadata of (React.SyntheticEvent -> unit)\n        | OnLoadStart of (React.SyntheticEvent -> unit)\n        | OnPause of (React.SyntheticEvent -> unit)\n        | OnPlay of (React.SyntheticEvent -> unit)\n        | OnPlaying of (React.SyntheticEvent -> unit)\n        | OnProgress of (React.SyntheticEvent -> unit)\n        | OnRateChange of (React.SyntheticEvent -> unit)\n        | OnSeeked of (React.SyntheticEvent -> unit)\n        | OnSeeking of (React.SyntheticEvent -> unit)\n        | OnStalled of (React.SyntheticEvent -> unit)\n        | OnSuspend of (React.SyntheticEvent -> unit)\n        | OnTimeUpdate of (React.SyntheticEvent -> unit)\n        | OnVolumeChange of (React.SyntheticEvent -> unit)\n        | OnWaiting of (React.SyntheticEvent -> unit)\n        | OnClick of (React.MouseEvent -> unit)\n        | OnContextMenu of (React.MouseEvent -> unit)\n        | OnDoubleClick of (React.MouseEvent -> unit)\n        | OnDrag of (React.DragEvent -> unit)\n        | OnDragEnd of (React.DragEvent -> unit)\n        | OnDragEnter of (React.DragEvent -> unit)\n        | OnDragExit of (React.DragEvent -> unit)\n        | OnDragLeave of (React.DragEvent -> unit)\n        | OnDragOver of (React.DragEvent -> unit)\n        | OnDragStart of (React.DragEvent -> unit)\n        | OnDrop of (React.DragEvent -> unit)\n        | OnMouseDown of (React.MouseEvent -> unit)\n        | OnMouseEnter of (React.MouseEvent -> unit)\n        | OnMouseLeave of (React.MouseEvent -> unit)\n        | OnMouseMove of (React.MouseEvent -> unit)\n        | OnMouseOut of (React.MouseEvent -> unit)\n        | OnMouseOver of (React.MouseEvent -> unit)\n        | OnMouseUp of (React.MouseEvent -> unit)\n        | OnSelect of (React.SyntheticEvent -> unit)\n        | OnTouchCancel of (React.TouchEvent -> unit)\n        | OnTouchEnd of (React.TouchEvent -> unit)\n        | OnTouchMove of (React.TouchEvent -> unit)\n        | OnTouchStart of (React.TouchEvent -> unit)\n        | OnScroll of (React.UIEvent -> unit)\n        | OnWheel of (React.WheelEvent -> unit)\n        | OnAnimationStart of (React.AnimationEvent -> unit)\n        | OnAnimationEnd of (React.AnimationEvent -> unit)\n        | OnAnimationIteration of (React.AnimationEvent -> unit)\n        | OnTransitionEnd of (React.TransitionEvent -> unit)\n        interface IHTMLProp\n\n    type SVGAttr =\n        | ClipPath of string\n        | Cx of obj\n        | Cy of obj\n        | D of string\n        | Dx of obj\n        | Dy of obj\n        | Fill of string\n        | FillOpacity of obj\n        | FontFamily of string\n        | FontSize of obj\n        | Fx of obj\n        | Fy of obj\n        | GradientTransform of string\n        | GradientUnits of string\n        | Height of obj\n        | MarkerEnd of string\n        | MarkerMid of string\n        | MarkerStart of string\n        | Offset of obj\n        | Opacity of obj\n        | PatternContentUnits of string\n        | PatternUnits of string\n        | Points of string\n        | PreserveAspectRatio of string\n        | R of obj\n        | Rx of obj\n        | Ry of obj\n        | SpreadMethod of string\n        | StopColor of string\n        | StopOpacity of obj\n        | Stroke of string\n        | StrokeDasharray of string\n        | StrokeLinecap of string\n        | StrokeMiterlimit of string\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TextAnchor of string\n        | Transform of string\n        | Version of string\n        | ViewBox of string\n        | Width of obj\n        | X1 of obj\n        | X2 of obj\n        | X of obj\n        | XlinkActuate of string\n        | XlinkArcrole of string\n        | XlinkHref of string\n        | XlinkRole of string\n        | XlinkShow of string\n        | XlinkTitle of string\n        | XlinkType of string\n        | XmlBase of string\n        | XmlLang of string\n        | XmlSpace of string\n        | Y1 of obj\n        | Y2 of obj\n        | Y of obj\n#if !FABLE_COMPILER\n        | Custom of string * obj\n#else\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        static member inline Custom (key: string, value: obj) : SVGAttr = !!(key, value)\n#endif\n        interface IProp\n\n    type HTMLAttr =\n        | DefaultChecked of bool\n        | DefaultValue of string\n        | Accept of string\n        | AcceptCharset of string\n        | AccessKey of string\n        | Action of string\n        | AllowFullScreen of bool\n        | AllowTransparency of bool\n        | Alt of string\n        | [<CompiledName(\"aria-haspopup\")>] AriaHasPopup of bool\n        | [<CompiledName(\"aria-expanded\")>] AriaExpanded of bool\n        | Async of bool\n        | AutoComplete of string\n        | AutoFocus of bool\n        | AutoPlay of bool\n        | Capture of bool\n        | CellPadding of obj\n        | CellSpacing of obj\n        | CharSet of string\n        | Challenge of string\n        | Checked of bool\n        | ClassID of string\n        | ClassName of string\n        /// Alias of ClassName\n        | [<CompiledName(\"className\")>] Class of string\n        | Cols of float\n        | ColSpan of float\n        | Content of string\n        | ContentEditable of bool\n        | ContextMenu of string\n        | Controls of bool\n        | Coords of string\n        | CrossOrigin of string\n        // | Data of string\n        | [<CompiledName(\"data-toggle\")>] DataToggle of string\n        | DateTime of string\n        | Default of bool\n        | Defer of bool\n        | Dir of string\n        | Disabled of bool\n        | Download of obj\n        | Draggable of bool\n        | EncType of string\n        | Form of string\n        | FormAction of string\n        | FormEncType of string\n        | FormMethod of string\n        | FormNoValidate of bool\n        | FormTarget of string\n        | FrameBorder of obj\n        | Headers of string\n        | Height of obj\n        | Hidden of bool\n        | High of float\n        | Href of string\n        | HrefLang of string\n        | HtmlFor of string\n        | HttpEquiv of string\n        | Icon of string\n        | Id of string\n        | InputMode of string\n        | Integrity of string\n        | Is of string\n        | KeyParams of string\n        | KeyType of string\n        | Kind of string\n        | Label of string\n        | Lang of string\n        | List of string\n        | Loop of bool\n        | Low of float\n        | Manifest of string\n        | MarginHeight of float\n        | MarginWidth of float\n        | Max of obj\n        | MaxLength of float\n        | Media of string\n        | MediaGroup of string\n        | Method of string\n        | Min of obj\n        | MinLength of float\n        | Multiple of bool\n        | Muted of bool\n        | Name of string\n        | NoValidate of bool\n        | Open of bool\n        | Optimum of float\n        | Pattern of string\n        | Placeholder of string\n        | Poster of string\n        | Preload of string\n        | RadioGroup of string\n        | ReadOnly of bool\n        | Rel of string\n        | Required of bool\n        | Role of string\n        | Rows of float\n        | RowSpan of float\n        | Sandbox of string\n        | Scope of string\n        | Scoped of bool\n        | Scrolling of string\n        | Seamless of bool\n        | Selected of bool\n        | Shape of string\n        | Size of float\n        | Sizes of string\n        | Span of float\n        | SpellCheck of bool\n        | Src of string\n        | SrcDoc of string\n        | SrcLang of string\n        | SrcSet of string\n        | Start of float\n        | Step of obj\n        | Summary of string\n        | TabIndex of float\n        | Target of string\n        | Title of string\n        | Type of string\n        | UseMap of string\n        | Value of string\n        | Width of obj\n        | Wmode of string\n        | Wrap of string\n        | About of string\n        | Datatype of string\n        | Inlist of obj\n        | Prefix of string\n        | Property of string\n        | Resource of string\n        | Typeof of string\n        | Vocab of string\n        | AutoCapitalize of string\n        | AutoCorrect of string\n        | AutoSave of string\n        // | Color of string // Conflicts with CSSProp, shouldn't be used in HTML5\n        | ItemProp of string\n        | ItemScope of bool\n        | ItemType of string\n        | ItemID of string\n        | ItemRef of string\n        | Results of float\n        | Security of string\n        | Unselectable of bool\n#if !FABLE_COMPILER\n        | Custom of string * obj\n        | Style of CSSProp list\n        | Data of string * obj\n#else\n        static member inline Custom (key: string, value: obj) : HTMLAttr = !!(key, value)\n#endif\n        interface IHTMLProp\n\n    type CSSProp =\n        | AlignContent of obj\n        | AlignItems of obj\n        | AlignSelf of obj\n        | AlignmentAdjust of obj\n        | AlignmentBaseline of obj\n        | All of obj\n        | Animation of obj\n        | AnimationDelay of obj\n        | AnimationDirection of obj\n        | AnimationDuration of obj\n        | AnimationFillMode of obj\n        | AnimationIterationCount of obj\n        | AnimationName of obj\n        | AnimationPlayState of obj\n        | AnimationTimingFunction of obj\n        | Appearance of obj\n        | BackfaceVisibility of obj\n        | Background of obj\n        | BackgroundAttachment of obj\n        | BackgroundBlendMode of obj\n        | BackgroundClip of obj\n        | BackgroundColor of obj\n        | BackgroundComposite of obj\n        | BackgroundImage of obj\n        | BackgroundOrigin of obj\n        | BackgroundPosition of obj\n        | BackgroundPositionX of obj\n        | BackgroundPositionY of obj\n        | BackgroundRepeat of obj\n        | BackgroundSize of obj\n        | BaselineShift of obj\n        | Behavior of obj\n        | BlockSize of obj\n        | Border of obj\n        | BorderBlockEnd of obj\n        | BorderBlockEndColor of obj\n        | BorderBlockEndStyle of obj\n        | BorderBlockEndWidth of obj\n        | BorderBlockStart of obj\n        | BorderBlockStartColor of obj\n        | BorderBlockStartStyle of obj\n        | BorderBlockStartWidth of obj\n        | BorderBottom of obj\n        | BorderBottomColor of obj\n        | BorderBottomLeftRadius of obj\n        | BorderBottomRightRadius of obj\n        | BorderBottomStyle of obj\n        | BorderBottomWidth of obj\n        | BorderCollapse of obj\n        | BorderColor of obj\n        | BorderCornerShape of obj\n        | BorderImage of obj\n        | BorderImageOutset of obj\n        | BorderImageRepeat of obj\n        | BorderImageSlice of obj\n        | BorderImageSource of obj\n        | BorderImageWidth of obj\n        | BorderInlineEnd of obj\n        | BorderInlineEndColor of obj\n        | BorderInlineEndStyle of obj\n        | BorderInlineEndWidth of obj\n        | BorderInlineStart of obj\n        | BorderInlineStartColor of obj\n        | BorderInlineStartStyle of obj\n        | BorderInlineStartWidth of obj\n        | BorderLeft of obj\n        | BorderLeftColor of obj\n        | BorderLeftStyle of obj\n        | BorderLeftWidth of obj\n        | BorderRadius of obj\n        | BorderRight of obj\n        | BorderRightColor of obj\n        | BorderRightStyle of obj\n        | BorderRightWidth of obj\n        | BorderSpacing of obj\n        | BorderStyle of obj\n        | BorderTop of obj\n        | BorderTopColor of obj\n        | BorderTopLeftRadius of obj\n        | BorderTopRightRadius of obj\n        | BorderTopStyle of obj\n        | BorderTopWidth of obj\n        | BorderWidth of obj\n        | Bottom of obj\n        | BoxAlign of obj\n        | BoxDecorationBreak of obj\n        | BoxDirection of obj\n        | BoxFlex of obj\n        | BoxFlexGroup of obj\n        | BoxLineProgression of obj\n        | BoxLines of obj\n        | BoxOrdinalGroup of obj\n        | BoxShadow of obj\n        | BoxSizing of obj\n        | BreakAfter of obj\n        | BreakBefore of obj\n        | BreakInside of obj\n        | CaptionSide of obj\n        | CaretColor of obj\n        | Clear of obj\n        | Clip of obj\n        | ClipPath of obj\n        | ClipRule of obj\n        | Color of obj\n        | ColorInterpolation of obj\n        | ColorInterpolationFilters of obj\n        | ColorProfile of obj\n        | ColorRendering of obj\n        | ColumnCount of obj\n        | ColumnFill of obj\n        | ColumnGap of obj\n        | ColumnRule of obj\n        | ColumnRuleColor of obj\n        | ColumnRuleStyle of obj\n        | ColumnRuleWidth of obj\n        | ColumnSpan of obj\n        | ColumnWidth of obj\n        | Columns of obj\n        | Content of obj\n        | CounterIncrement of obj\n        | CounterReset of obj\n        | Cue of obj\n        | CueAfter of obj\n        | Cursor of obj\n        | Direction of obj\n        | Display of obj\n        | DominantBaseline of obj\n        | EmptyCells of obj\n        | EnableBackground of obj\n        | Fill of obj\n        | FillOpacity of obj\n        | FillRule of obj\n        | Filter of obj\n        | Flex of obj\n        | FlexAlign of obj\n        | FlexBasis of obj\n        | FlexDirection of obj\n        | FlexFlow of obj\n        | FlexGrow of obj\n        | FlexItemAlign of obj\n        | FlexLinePack of obj\n        | FlexOrder of obj\n        | FlexShrink of obj\n        | FlexWrap of obj\n        | Float of obj\n        | FloodColor of obj\n        | FloodOpacity of obj\n        | FlowFrom of obj\n        | Font of obj\n        | FontFamily of obj\n        | FontFeatureSettings of obj\n        | FontKerning of obj\n        | FontLanguageOverride of obj\n        | FontSize of obj\n        | FontSizeAdjust of obj\n        | FontStretch of obj\n        | FontStyle of obj\n        | FontSynthesis of obj\n        | FontVariant of obj\n        | FontVariantAlternates of obj\n        | FontVariantCaps of obj\n        | FontVariantEastAsian of obj\n        | FontVariantLigatures of obj\n        | FontVariantNumeric of obj\n        | FontVariantPosition of obj\n        | FontWeight of obj\n        | GlyphOrientationHorizontal of obj\n        | GlyphOrientationVertical of obj\n        | Grid of obj\n        | GridArea of obj\n        | GridAutoColumns of obj\n        | GridAutoFlow of obj\n        | GridAutoRows of obj\n        | GridColumn of obj\n        | GridColumnEnd of obj\n        | GridColumnGap of obj\n        | GridColumnStart of obj\n        | GridGap of obj\n        | GridRow of obj\n        | GridRowEnd of obj\n        | GridRowGap of obj\n        | GridRowPosition of obj\n        | GridRowSpan of obj\n        | GridRowStart of obj\n        | GridTemplate of obj\n        | GridTemplateAreas of obj\n        | GridTemplateColumns of obj\n        | GridTemplateRows of obj\n        | HangingPunctuation of obj\n        | Height of obj\n        | HyphenateLimitChars of obj\n        | HyphenateLimitLines of obj\n        | HyphenateLimitZone of obj\n        | Hyphens of obj\n        | ImageOrientation of obj\n        | ImageRendering of obj\n        | ImageResolution of obj\n        | ImeMode of obj\n        | InlineSize of obj\n        | Isolation of obj\n        | JustifyContent of obj\n        | Kerning of obj\n        | LayoutGrid of obj\n        | LayoutGridChar of obj\n        | LayoutGridLine of obj\n        | LayoutGridMode of obj\n        | LayoutGridType of obj\n        | Left of obj\n        | LetterSpacing of obj\n        | LightingColor of obj\n        | LineBreak of obj\n        | LineClamp of obj\n        | LineHeight of obj\n        | ListStyle of obj\n        | ListStyleImage of obj\n        | ListStylePosition of obj\n        | ListStyleType of obj\n        | Margin of obj\n        | MarginBlockEnd of obj\n        | MarginBlockStart of obj\n        | MarginBottom of obj\n        | MarginInlineEnd of obj\n        | MarginInlineStart of obj\n        | MarginLeft of obj\n        | MarginRight of obj\n        | MarginTop of obj\n        | MarkerEnd of obj\n        | MarkerMid of obj\n        | MarkerStart of obj\n        | MarqueeDirection of obj\n        | MarqueeStyle of obj\n        | Mask of obj\n        | MaskBorder of obj\n        | MaskBorderRepeat of obj\n        | MaskBorderSlice of obj\n        | MaskBorderSource of obj\n        | MaskBorderWidth of obj\n        | MaskClip of obj\n        | MaskComposite of obj\n        | MaskImage of obj\n        | MaskMode of obj\n        | MaskOrigin of obj\n        | MaskPosition of obj\n        | MaskRepeat of obj\n        | MaskSize of obj\n        | MaskType of obj\n        | MaxFontSize of obj\n        | MaxHeight of obj\n        | MaxWidth of obj\n        | MinBlockSize of obj\n        | MinHeight of obj\n        | MinInlineSize of obj\n        | MinWidth of obj\n        | MixBlendMode of obj\n        | ObjectFit of obj\n        | ObjectPosition of obj\n        | OffsetBlockEnd of obj\n        | OffsetBlockStart of obj\n        | OffsetInlineEnd of obj\n        | OffsetInlineStart of obj\n        | Opacity of obj\n        | Order of obj\n        | Orphans of obj\n        | Outline of obj\n        | OutlineColor of obj\n        | OutlineOffset of obj\n        | OutlineStyle of obj\n        | OutlineWidth of obj\n        | Overflow of obj\n        | OverflowStyle of obj\n        | OverflowWrap of obj\n        | OverflowX of obj\n        | OverflowY of obj\n        | Padding of obj\n        | PaddingBlockEnd of obj\n        | PaddingBlockStart of obj\n        | PaddingBottom of obj\n        | PaddingInlineEnd of obj\n        | PaddingInlineStart of obj\n        | PaddingLeft of obj\n        | PaddingRight of obj\n        | PaddingTop of obj\n        | PageBreakAfter of obj\n        | PageBreakBefore of obj\n        | PageBreakInside of obj\n        | Pause of obj\n        | PauseAfter of obj\n        | PauseBefore of obj\n        | Perspective of obj\n        | PerspectiveOrigin of obj\n        | PointerEvents of obj\n        | Position of obj\n        | PunctuationTrim of obj\n        | Quotes of obj\n        | RegionFragment of obj\n        | Resize of obj\n        | RestAfter of obj\n        | RestBefore of obj\n        | Right of obj\n        | RubyAlign of obj\n        | RubyMerge of obj\n        | RubyPosition of obj\n        | ScrollBehavior of obj\n        | ScrollSnapCoordinate of obj\n        | ScrollSnapDestination of obj\n        | ScrollSnapType of obj\n        | ShapeImageThreshold of obj\n        | ShapeInside of obj\n        | ShapeMargin of obj\n        | ShapeOutside of obj\n        | ShapeRendering of obj\n        | Speak of obj\n        | SpeakAs of obj\n        | StopColor of obj\n        | StopOpacity of obj\n        | Stroke of obj\n        | StrokeDasharray of obj\n        | StrokeDashoffset of obj\n        | StrokeLinecap of obj\n        | StrokeLinejoin of obj\n        | StrokeMiterlimit of obj\n        | StrokeOpacity of obj\n        | StrokeWidth of obj\n        | TabSize of obj\n        | TableLayout of obj\n        | TextAlign of obj\n        | TextAlignLast of obj\n        | TextAnchor of obj\n        | TextCombineUpright of obj\n        | TextDecoration of obj\n        | TextDecorationColor of obj\n        | TextDecorationLine of obj\n        | TextDecorationLineThrough of obj\n        | TextDecorationNone of obj\n        | TextDecorationOverline of obj\n        | TextDecorationSkip of obj\n        | TextDecorationStyle of obj\n        | TextDecorationUnderline of obj\n        | TextEmphasis of obj\n        | TextEmphasisColor of obj\n        | TextEmphasisPosition of obj\n        | TextEmphasisStyle of obj\n        | TextHeight of obj\n        | TextIndent of obj\n        | TextJustify of obj\n        | TextJustifyTrim of obj\n        | TextKashidaSpace of obj\n        | TextLineThrough of obj\n        | TextLineThroughColor of obj\n        | TextLineThroughMode of obj\n        | TextLineThroughStyle of obj\n        | TextLineThroughWidth of obj\n        | TextOrientation of obj\n        | TextOverflow of obj\n        | TextOverline of obj\n        | TextOverlineColor of obj\n        | TextOverlineMode of obj\n        | TextOverlineStyle of obj\n        | TextOverlineWidth of obj\n        | TextRendering of obj\n        | TextScript of obj\n        | TextShadow of obj\n        | TextTransform of obj\n        | TextUnderlinePosition of obj\n        | TextUnderlineStyle of obj\n        | Top of obj\n        | TouchAction of obj\n        | Transform of obj\n        | TransformBox of obj\n        | TransformOrigin of obj\n        | TransformOriginZ of obj\n        | TransformStyle of obj\n        | Transition of obj\n        | TransitionDelay of obj\n        | TransitionDuration of obj\n        | TransitionProperty of obj\n        | TransitionTimingFunction of obj\n        | UnicodeBidi of obj\n        | UnicodeRange of obj\n        | UserFocus of obj\n        | UserInput of obj\n        | VerticalAlign of obj\n        | Visibility of obj\n        | VoiceBalance of obj\n        | VoiceDuration of obj\n        | VoiceFamily of obj\n        | VoicePitch of obj\n        | VoiceRange of obj\n        | VoiceRate of obj\n        | VoiceStress of obj\n        | VoiceVolume of obj\n        | WhiteSpace of obj\n        | WhiteSpaceTreatment of obj\n        | Widows of obj\n        | Width of obj\n        | WillChange of obj\n        | WordBreak of obj\n        | WordSpacing of obj\n        | WordWrap of obj\n        | WrapFlow of obj\n        | WrapMargin of obj\n        | WrapOption of obj\n        | WritingMode of obj\n        | ZIndex of obj\n        | Zoom of obj\n#if !FABLE_COMPILER\n        | Custom of string * obj\n#else\n        /// If you are searching for a way to provide a value not supported by this DSL then use something like: CSSProp.Custom (\"align-content\", \"center\")\n        static member inline Custom (key: string, value: obj) : CSSProp = !!(key, value)\n#endif\n\n#if FABLE_COMPILER\n    let inline Style (css: CSSProp seq): HTMLAttr =\n        !!(\"style\", keyValueList CaseRules.LowerFirst css)\n\n    let inline Data (key: string, value: obj): IHTMLProp =\n        !!(\"data-\" + key, value)\n#endif\n\nopen Props\nopen Fable.Import.React\n\n[<Erase>]\ntype HTMLNode =\n| Text of string\n| RawText of string\n| Node of string * IProp seq * ReactElement seq\n| List of ReactElement seq\n| Empty\nwith interface ReactElement\n\n[<Import(\"createElement\", from=\"react\")>]\nlet createElement(comp: obj, props: obj, [<ParamList>] children: obj) =\n    HTMLNode.Empty :> ReactElement\n\n[<StringEnum>]\ntype ServerElementType =\n| Tag\n| Fragment\n| Component\n\nlet [<Literal>] private ChildrenName = \"children\"\n\nmodule ServerRenderingInternal =\n\n#if FABLE_COMPILER\n    let inline createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        createElement(tag, props, children)\n    let inline createServerElementByFn (f, props, children) =\n        createElement(f, props, children)\n#else\n    let createServerElement (tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        match elementType with\n        | ServerElementType.Tag ->\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\n        | ServerElementType.Fragment ->\n            HTMLNode.List children :> ReactElement\n        | ServerElementType.Component ->\n            let tag = tag :?> System.Type\n            let comp = System.Activator.CreateInstance(tag, props)\n#if NETSTANDARD1_6\n            let tag = tag.GetTypeInfo()\n#endif\n            let childrenProp = tag.GetProperty(ChildrenName)\n            childrenProp.SetValue(comp, children |> Seq.toArray)\n            let render = tag.GetMethod(\"render\")\n            render.Invoke(comp, null) :?> ReactElement\n\n    let createServerElementByFn = fun (f, props, children) ->\n#if NETSTANDARD1_6\n        let propsType' = props.GetType()\n        let propsType = propsType'.GetTypeInfo()\n#else\n        let propsType = props.GetType()\n#endif\n        let props =\n            if propsType.GetProperty (ChildrenName) |> isNull then\n                props\n            else\n                let values = ResizeArray<obj> ()\n                let properties = propsType.GetProperties()\n                for p in properties do\n                    if p.Name = ChildrenName then\n                        values.Add (children |> Seq.toArray)\n                    else\n                        values.Add (FSharpValue.GetRecordField(props, p))\n#if NETSTANDARD1_6\n                let propsType = propsType'\n#endif\n                FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\n        f props\n\n#endif\n\nopen ServerRenderingInternal\n\n/// Instantiate an imported React component\nlet inline from<'P> (com: ComponentClass<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(com, props, children)\n\n/// Instantiate a component from a type inheriting React.Component\n/// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\nlet inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<'T>, props, children)\n#else\n    createServerElement(typeof<'T>, props, children, ServerElementType.Component)\n#endif\n\n\n/// OBSOLETE: Use `ofType`\n[<System.Obsolete(\"Use ofType\")>]\nlet inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n    ofType<'T, 'P, 'S> props children\n\n/// Instantiate a stateless component from a function\n/// Example:\n/// ```\n/// let Hello (p: MyProps) = div [] [ofString (\"Hello \" + p.name)]\n/// ofFunction Hello { name = \"Maxime\" } []\n/// ```\nlet inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(f, props, children)\n#else\n    createServerElementByFn(f, props, children)\n#endif\n\n/// OBSOLETE: Use `ofFunction`\n[<System.Obsolete(\"Use ofFunction\")>]\nlet inline fn<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n    ofFunction f props children\n\n/// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\n/// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\nlet inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\n    createElement(import importMember importPath, props, children)\n\n#if FABLE_COMPILER\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = unbox s\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = unbox s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = unbox i\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = unbox f\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = unbox(List.toArray els)\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = unbox els\n\n#else\n/// Alias of `ofString`\nlet inline str (s: string): ReactElement = HTMLNode.Text s :> ReactElement\n\n/// Cast a string to a React element (erased in runtime)\nlet inline ofString (s: string): ReactElement = str s\n\n/// Cast an option value to a React element (erased in runtime)\nlet inline ofOption (o: ReactElement option): ReactElement =\n    match o with Some o -> o | None -> null // Option.toObj(o)\n\n/// OBSOLETE: Use `ofOption`\n[<System.Obsolete(\"Use ofOption\")>]\nlet inline opt (o: ReactElement option): ReactElement = ofOption o\n\n/// Cast an int to a React element (erased in runtime)\nlet inline ofInt (i: int): ReactElement = HTMLNode.RawText (string i) :> ReactElement\n\n/// Cast a float to a React element (erased in runtime)\nlet inline ofFloat (f: float): ReactElement = HTMLNode.RawText (string f) :> ReactElement\n\n/// Returns a list **from .render() method**\nlet inline ofList (els: ReactElement list): ReactElement = HTMLNode.List els :> ReactElement\n\n/// Returns an array **from .render() method**\nlet inline ofArray (els: ReactElement array): ReactElement = HTMLNode.List els :> ReactElement\n\n#endif\n\n\n/// Instantiate a DOM React element\nlet inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a DOM React element (void)\nlet inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, [])\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\n#endif\n\n/// Instantiate an SVG React element\nlet inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n/// Instantiate a React fragment\nlet inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n    createElement(jsConstructor<Fragment>, keyValueList CaseRules.LowerFirst props, children)\n#else\n    createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\n#endif\n\n// Standard elements\nlet inline a b c = domEl \"a\" b c\nlet inline abbr b c = domEl \"abbr\" b c\nlet inline address b c = domEl \"address\" b c\nlet inline article b c = domEl \"article\" b c\nlet inline aside b c = domEl \"aside\" b c\nlet inline audio b c = domEl \"audio\" b c\nlet inline b b' c = domEl \"b\" b' c\nlet inline bdi b c = domEl \"bdi\" b c\nlet inline bdo b c = domEl \"bdo\" b c\nlet inline big b c = domEl \"big\" b c\nlet inline blockquote b c = domEl \"blockquote\" b c\nlet inline body b c = domEl \"body\" b c\nlet inline button b c = domEl \"button\" b c\nlet inline canvas b c = domEl \"canvas\" b c\nlet inline caption b c = domEl \"caption\" b c\nlet inline cite b c = domEl \"cite\" b c\nlet inline code b c = domEl \"code\" b c\nlet inline colgroup b c = domEl \"colgroup\" b c\nlet inline data b c = domEl \"data\" b c\nlet inline datalist b c = domEl \"datalist\" b c\nlet inline dd b c = domEl \"dd\" b c\nlet inline del b c = domEl \"del\" b c\nlet inline details b c = domEl \"details\" b c\nlet inline dfn b c = domEl \"dfn\" b c\nlet inline dialog b c = domEl \"dialog\" b c\nlet inline div b c = domEl \"div\" b c\nlet inline dl b c = domEl \"dl\" b c\nlet inline dt b c = domEl \"dt\" b c\nlet inline em b c = domEl \"em\" b c\nlet inline fieldset b c = domEl \"fieldset\" b c\nlet inline figcaption b c = domEl \"figcaption\" b c\nlet inline figure b c = domEl \"figure\" b c\nlet inline footer b c = domEl \"footer\" b c\nlet inline form b c = domEl \"form\" b c\nlet inline h1 b c = domEl \"h1\" b c\nlet inline h2 b c = domEl \"h2\" b c\nlet inline h3 b c = domEl \"h3\" b c\nlet inline h4 b c = domEl \"h4\" b c\nlet inline h5 b c = domEl \"h5\" b c\nlet inline h6 b c = domEl \"h6\" b c\nlet inline head b c = domEl \"head\" b c\nlet inline header b c = domEl \"header\" b c\nlet inline hgroup b c = domEl \"hgroup\" b c\nlet inline html b c = domEl \"html\" b c\nlet inline i b c = domEl \"i\" b c\nlet inline iframe b c = domEl \"iframe\" b c\nlet inline ins b c = domEl \"ins\" b c\nlet inline kbd b c = domEl \"kbd\" b c\nlet inline label b c = domEl \"label\" b c\nlet inline legend b c = domEl \"legend\" b c\nlet inline li b c = domEl \"li\" b c\nlet inline main b c = domEl \"main\" b c\nlet inline map b c = domEl \"map\" b c\nlet inline mark b c = domEl \"mark\" b c\nlet inline menu b c = domEl \"menu\" b c\nlet inline meter b c = domEl \"meter\" b c\nlet inline nav b c = domEl \"nav\" b c\nlet inline noscript b c = domEl \"noscript\" b c\nlet inline ``object`` b c = domEl \"object\" b c\nlet inline ol b c = domEl \"ol\" b c\nlet inline optgroup b c = domEl \"optgroup\" b c\nlet inline option b c = domEl \"option\" b c\nlet inline output b c = domEl \"output\" b c\nlet inline p b c = domEl \"p\" b c\nlet inline picture b c = domEl \"picture\" b c\nlet inline pre b c = domEl \"pre\" b c\nlet inline progress b c = domEl \"progress\" b c\nlet inline q b c = domEl \"q\" b c\nlet inline rp b c = domEl \"rp\" b c\nlet inline rt b c = domEl \"rt\" b c\nlet inline ruby b c = domEl \"ruby\" b c\nlet inline s b c = domEl \"s\" b c\nlet inline samp b c = domEl \"samp\" b c\nlet inline script b c = domEl \"script\" b c\nlet inline section b c = domEl \"section\" b c\nlet inline select b c = domEl \"select\" b c\nlet inline small b c = domEl \"small\" b c\nlet inline span b c = domEl \"span\" b c\nlet inline strong b c = domEl \"strong\" b c\nlet inline style b c = domEl \"style\" b c\nlet inline sub b c = domEl \"sub\" b c\nlet inline summary b c = domEl \"summary\" b c\nlet inline sup b c = domEl \"sup\" b c\nlet inline table b c = domEl \"table\" b c\nlet inline tbody b c = domEl \"tbody\" b c\nlet inline td b c = domEl \"td\" b c\nlet inline textarea b c = domEl \"textarea\" b c\nlet inline tfoot b c = domEl \"tfoot\" b c\nlet inline th b c = domEl \"th\" b c\nlet inline thead b c = domEl \"thead\" b c\nlet inline time b c = domEl \"time\" b c\nlet inline title b c = domEl \"title\" b c\nlet inline tr b c = domEl \"tr\" b c\nlet inline u b c = domEl \"u\" b c\nlet inline ul b c = domEl \"ul\" b c\nlet inline var b c = domEl \"var\" b c\nlet inline video b c = domEl \"video\" b c\n\n// Void element\nlet inline area b = voidEl \"area\" b\nlet inline ``base`` b = voidEl \"base\" b\nlet inline br b = voidEl \"br\" b\nlet inline col b = voidEl \"col\" b\nlet inline embed b = voidEl \"embed\" b\nlet inline hr b = voidEl \"hr\" b\nlet inline img b = voidEl \"img\" b\nlet inline input b = voidEl \"input\" b\nlet inline keygen b = voidEl \"keygen\" b\nlet inline link b = voidEl \"link\" b\nlet inline menuitem b = voidEl \"menuitem\" b\nlet inline meta b = voidEl \"meta\" b\nlet inline param b = voidEl \"param\" b\nlet inline source b = voidEl \"source\" b\nlet inline track b = voidEl \"track\" b\nlet inline wbr b = voidEl \"wbr\" b\n\n// SVG elements\nlet inline svg b c = svgEl \"svg\" b c\nlet inline circle b c = svgEl \"circle\" b c\nlet inline clipPath b c = svgEl \"clipPath\" b c\nlet inline defs b c = svgEl \"defs\" b c\nlet inline ellipse b c = svgEl \"ellipse\" b c\nlet inline g b c = svgEl \"g\" b c\nlet inline image b c = svgEl \"image\" b c\nlet inline line b c = svgEl \"line\" b c\nlet inline linearGradient b c = svgEl \"linearGradient\" b c\nlet inline mask b c = svgEl \"mask\" b c\nlet inline path b c = svgEl \"path\" b c\nlet inline pattern b c = svgEl \"pattern\" b c\nlet inline polygon b c = svgEl \"polygon\" b c\nlet inline polyline b c = svgEl \"polyline\" b c\nlet inline radialGradient b c = svgEl \"radialGradient\" b c\nlet inline rect b c = svgEl \"rect\" b c\nlet inline stop b c = svgEl \"stop\" b c\nlet inline text b c = svgEl \"text\" b c\nlet inline tspan b c = svgEl \"tspan\" b c\n\n// Class list helpers\nlet classBaseList std classes =\n    classes\n    |> List.fold (fun complete -> function | (name,true) -> complete + \" \" + name | _ -> complete) std\n    |> ClassName\n\nlet classList classes = classBaseList \"\" classes\n\n/// Finds a DOM element by its ID and mounts the React element there\nlet inline mountById (domElId: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.getElementById(domElId))\n\n/// Finds the first DOM element matching a CSS selector and mounts the React element there\nlet inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\n    ReactDom.render(reactEl, Browser.document.querySelector(domElSelector))\n\ntype Fable.Import.React.FormEvent with\n    /// Access the value from target\n    /// Equivalent to `unbox<string> this.target?value`\n    member this.Value =\n        unbox<string> this.target?value\n\n// Helpers for ReactiveComponents (see #44)\nmodule ReactiveComponents =\n    type Props<'P, 'S, 'Msg> = {\n        key: string\n        props: 'P\n        update: 'Msg -> 'S -> 'S\n        view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement\n        init: 'P -> 'S\n    }\n\n    and State<'T> = {\n        value: 'T\n    }\n\n    and Model<'P, 'S> = {\n        props: 'P\n        state: 'S\n        children: ReactElement[]\n    }\n\nopen ReactiveComponents\n\ntype ReactiveCom<'P, 'S, 'Msg>(initProps) =\n    inherit Component<Props<'P, 'S, 'Msg>, State<'S>>(initProps)\n    do base.setInitState { value = initProps.init(initProps.props) }\n\n    override this.render() =\n        let model =\n            { props = this.props.props\n              state = this.state.value\n              children = this.children }\n        this.props.view model (fun msg ->\n            let newState = this.props.update msg this.state.value\n            this.setState({ value = newState }))\n\n/// Renders a stateful React component from functions similar to Elmish\n///  * `init` - Initializes component state with given props\n///  * `update` - Updates the state when `dispatch` is triggered\n///  * `view` - Render function, receives a `ReactiveComponents.Model` object and a `dispatch` function\n///  * `key` - The key is necessary to identify React elements in a list, an empty string can be passed otherwise\n///  * `props` - External properties passed to the component each time it's rendered, usually from its parent\n///  * `children` - A list of children React elements\nlet reactiveCom<'P, 'S, 'Msg>\n        (init: 'P -> 'S)\n        (update: 'Msg -> 'S -> 'S)\n        (view: Model<'P, 'S> -> ('Msg->unit) -> ReactElement)\n        (key: string)\n        (props: 'P)\n        (children: ReactElement seq): ReactElement =\n    ofType<ReactiveCom<'P, 'S, 'Msg>, Props<'P, 'S, 'Msg>, State<'S>>\n        { key=key; props=props; update=update; view=view; init=init }\n        children\n","﻿namespace Fabulosa\n\nmodule ClassNames =\n\n    open Fable.Helpers.React.Props\n    open Fable\n\n    type HTMLProps = IHTMLProp list\n\n    let htmlAttr: IHTMLProp -> HTMLAttr option =\n        function\n        | :? HTMLAttr as attr -> Some attr\n        | _ -> None\n\n    let htmlClassName =\n        function\n        | ClassName name -> Some name\n        | _ -> None\n\n    let htmlClasses =\n        List.choose htmlAttr\n        >> List.choose htmlClassName\n\n    let nonEmpty =\n        function\n        | \"\" -> None\n        | value -> Some value\n\n    let concatStrings =\n        List.choose nonEmpty >> String.concat \" \"\n\n    let className x = ClassName x :> IHTMLProp\n\n    let combineProps componentClasses htmlProps =\n        let htmlClasses =  htmlClasses htmlProps\n        let classes =  concatStrings <| htmlClasses @ componentClasses\n        htmlProps @ [className classes]","namespace Fabulosa\n\n[<RequireQualifiedAccess>]\nmodule Button =\n\n    open ClassNames\n    module R = Fable.Helpers.React\n    open R.Props\n\n    [<RequireQualifiedAccess>]\n    type Kind =\n    | Default\n    | Primary\n    | Link\n    | Unset\n\n    [<RequireQualifiedAccess>]\n    type Color =\n    | Success\n    | Error\n    | Unset\n\n    [<RequireQualifiedAccess>]\n    type Size =\n    | Small\n    | Large\n    | Unset\n\n    [<RequireQualifiedAccess>]\n    type State =\n    | Disabled\n    | Active\n    | Loading\n    | Unset\n\n    [<RequireQualifiedAccess>]\n    type Format =\n    | SquaredAction\n    | RoundAction\n    | Unset\n\n    [<RequireQualifiedAccess>]\n    type Props = {\n        Kind: Kind\n        Color: Color\n        Size: Size\n        State: State\n        Format: Format\n        HTMLProps: IHTMLProp list\n    }\n\n    let kind =\n        function\n        | Kind.Default -> \"btn-default\"\n        | Kind.Primary -> \"btn-primary\"\n        | Kind.Link -> \"btn-link\"\n        | Kind.Unset -> \"\"\n\n    let color =\n        function\n        | Color.Success -> \"btn-success\"\n        | Color.Error -> \"btn-error\"\n        | Color.Unset -> \"\"\n\n    let size =\n        function\n        | Size.Small -> \"btn-sm\"\n        | Size.Large -> \"btn-lg\"\n        | Size.Unset -> \"\"\n\n    let state =\n        function\n        | State.Disabled -> \"disabled\"\n        | State.Loading -> \"loading\"\n        | State.Active -> \"active\"\n        | State.Unset -> \"\"\n\n    let format =\n        function\n        | Format.SquaredAction -> \"btn-action\"\n        | Format.RoundAction -> \"btn-action circle\"\n        | Format.Unset -> \"\"\n\n    let defaults = {\n        Props.Kind = Kind.Unset\n        Props.Color = Color.Unset\n        Props.Size = Size.Unset\n        Props.State = State.Unset\n        Props.Format = Format.Unset\n        Props.HTMLProps = []\n    }\n\n    let ƒ (props: Props) =\n        props.HTMLProps\n        |> combineProps [\n            \"btn\"\n            kind props.Kind\n            color props.Color\n            size props.Size\n            state props.State\n            format props.Format ]\n        |> R.button\n\n    let render = ƒ\n\n[<RequireQualifiedAccess>]\nmodule Anchor =\n\n    open ClassNames\n    module R = Fable.Helpers.React\n    open R.Props\n\n    type Props = {\n        props: Button.Props list\n        HTMLProps: IHTMLProp list\n    }\n\n    let defaults = Button.defaults\n\n    let ƒ (props: Button.Props) =\n        props.HTMLProps\n        |> combineProps [\n            \"btn\"\n            Button.kind props.Kind\n            Button.color props.Color\n            Button.size props.Size\n            Button.state props.State\n            Button.format props.Format ]\n        |> R.a\n\n    let render = ƒ\n\nmodule ButtonGroup =\n\n    module R = Fable.Helpers.React\n    open R.Props\n    open ClassNames\n\n    type Block = bool\n\n    type Props = {\n        Block: Block\n        HTMLProps: IHTMLProp list\n    }\n\n    let defaults = {\n        Block = false\n        HTMLProps = []\n    }\n\n    let block =\n        function\n        | true -> \"btn-group-block\"\n        | false -> \"\"\n        \n\n    let ƒ (props: Props) =\n        props.HTMLProps\n        |> combineProps [\"btn-group\"]\n        |> R.div","module Renderer\n\nmodule R = Fable.Helpers.React\n\nlet tryMount id elem =\n    try\n        R.mountById id elem\n    with\n        | _ -> Fable.Import.Browser.console.log \"failed to mount\"","module HomeDemo\n\nopen Fabulosa\nmodule R = Fable.Helpers.React\nopen R.Props\n\nlet button =\n    Anchor.ƒ {\n        Anchor.defaults with\n            Kind = Button.Kind.Primary\n            HTMLProps = [Href \"button.html\"]\n    } [R.str \"Fabulosa\"]\n\nlet render () =\n    Renderer.tryMount \"button-demo\" button\n","﻿module ButtonDemo\n\nopen Fabulosa\nmodule R = Fable.Helpers.React\n\nlet button =\n    Button.ƒ\n        Button.defaults\n        [R.str \"Default\"]\n\nlet primary =\n    Button.ƒ {\n        Button.defaults with\n            Kind = Button.Kind.Primary\n    } [R.str \"Primary\"]\n\nlet link =\n    Button.ƒ {\n        Button.defaults with\n            Kind = Button.Kind.Link\n    } [R.str \"Link\"]\n\nlet small =\n    Button.ƒ {\n        Button.defaults with\n            Size = Button.Size.Small\n    } [R.str \"Small\"]\nlet medium =\n    Button.ƒ\n        Button.defaults\n        [R.str \"Default\"]\nlet large =\n    Button.ƒ {\n        Button.defaults with\n            Size = Button.Size.Large\n    } [R.str \"Large\"]\n\nlet success =\n    Button.ƒ {\n        Button.defaults with\n            Color = Button.Color.Success\n    } [R.str \"Success\"]\n\nlet error =\n    Button.ƒ {\n        Button.defaults with\n            Color = Button.Color.Error\n    } [R.str \"Error\"]\n\nlet render () =\n    Renderer.tryMount \"button-default-demo\" button\n    Renderer.tryMount \"button-primary-demo\" primary\n    Renderer.tryMount \"button-link-demo\" link\n    Renderer.tryMount \"button-small-demo\" small\n    Renderer.tryMount \"button-medium-demo\" medium\n    Renderer.tryMount \"button-large-demo\" large\n    Renderer.tryMount \"button-success-demo\" success\n    Renderer.tryMount \"button-error-demo\" error"],"sourceRoot":""}